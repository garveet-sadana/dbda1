<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0807.0327                               -->
<workbook original-version='18.1' source-build='2024.2.2 (20242.24.0807.0327)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Orders+ (Global Superstore)' inline='true' name='federated.1vxiqdt0t4h5oo1dk3acr0wq9441' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Global Superstore' name='excel-direct.1n51tdk0mip4wp16iyta50ieziiw'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/dbda.STUDENTSDC/Documents/My Tableau Repository/Datasources/Global Superstore.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1n51tdk0mip4wp16iyta50ieziiw' name='Managers' table='[Managers$]' type='table'>
          <columns gridOrigin='A1:B14:no:A1:B14:0' header='yes' outcome='6'>
            <column datatype='string' name='Manager' ordinal='0' />
            <column datatype='string' name='Region' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.1n51tdk0mip4wp16iyta50ieziiw' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:AB10001:no:A1:AB10001:0' header='yes' outcome='2'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Expected Ship Date' ordinal='3' />
              <column datatype='date' name='Actual Ship Date' ordinal='4' />
              <column datatype='string' name='Ship Mode' ordinal='5' />
              <column datatype='string' name='Customer ID' ordinal='6' />
              <column datatype='string' name='Customer Name' ordinal='7' />
              <column datatype='string' name='Gender' ordinal='8' />
              <column datatype='string' name='Segment' ordinal='9' />
              <column datatype='string' name='City' ordinal='10' />
              <column datatype='string' name='State' ordinal='11' />
              <column datatype='string' name='Country' ordinal='12' />
              <column datatype='string' name='Postal Code' ordinal='13' />
              <column datatype='string' name='Market' ordinal='14' />
              <column datatype='string' name='Region' ordinal='15' />
              <column datatype='string' name='Product ID' ordinal='16' />
              <column datatype='string' name='Category' ordinal='17' />
              <column datatype='string' name='Sub-Category' ordinal='18' />
              <column datatype='string' name='Product Name' ordinal='19' />
              <column datatype='real' name='Expected Sales' ordinal='20' />
              <column datatype='real' name='Actual Sales' ordinal='21' />
              <column datatype='real' name='Expected Profit' ordinal='22' />
              <column datatype='real' name='Actual Profit' ordinal='23' />
              <column datatype='integer' name='Quantity' ordinal='24' />
              <column datatype='real' name='Discount' ordinal='25' />
              <column datatype='real' name='Shipping Cost' ordinal='26' />
              <column datatype='string' name='Order Priority' ordinal='27' />
            </columns>
          </relation>
          <relation connection='excel-direct.1n51tdk0mip4wp16iyta50ieziiw' name='Managers' table='[Managers$]' type='table'>
            <columns gridOrigin='A1:B14:no:A1:B14:0' header='yes' outcome='6'>
              <column datatype='string' name='Manager' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.1n51tdk0mip4wp16iyta50ieziiw' name='Returned Orders' table='[&apos;Returned Orders$&apos;]' type='table'>
            <columns gridOrigin='A1:C1174:no:A1:C1174:0' header='yes' outcome='2'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='string' name='Return Reason' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Actual Profit]' value='[Orders].[Actual Profit]' />
          <map key='[Actual Sales]' value='[Orders].[Actual Sales]' />
          <map key='[Actual Ship Date]' value='[Orders].[Actual Ship Date]' />
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country]' value='[Orders].[Country]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Expected Profit]' value='[Orders].[Expected Profit]' />
          <map key='[Expected Sales]' value='[Orders].[Expected Sales]' />
          <map key='[Expected Ship Date]' value='[Orders].[Expected Ship Date]' />
          <map key='[Gender]' value='[Orders].[Gender]' />
          <map key='[Manager]' value='[Managers].[Manager]' />
          <map key='[Market]' value='[Orders].[Market]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Returned Orders)]' value='[Returned Orders].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Order Priority]' value='[Orders].[Order Priority]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region (Managers)]' value='[Managers].[Region]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Return Reason]' value='[Returned Orders].[Return Reason]' />
          <map key='[Returned]' value='[Returned Orders].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[Shipping Cost]' value='[Orders].[Shipping Cost]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AB10001:no:A1:AB10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Managers]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B14:no:A1:B14:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returned Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C1174:no:A1:C1174:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B8DC817750DC4111AFE64BA1B7E7ADF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B8DC817750DC4111AFE64BA1B7E7ADF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B8DC817750DC4111AFE64BA1B7E7ADF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Expected Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Expected Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Expected Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B8DC817750DC4111AFE64BA1B7E7ADF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Actual Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Actual Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Actual Ship Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B8DC817750DC4111AFE64BA1B7E7ADF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B8DC817750DC4111AFE64BA1B7E7ADF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B8DC817750DC4111AFE64BA1B7E7ADF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B8DC817750DC4111AFE64BA1B7E7ADF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B8DC817750DC4111AFE64BA1B7E7ADF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B8DC817750DC4111AFE64BA1B7E7ADF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B8DC817750DC4111AFE64BA1B7E7ADF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B8DC817750DC4111AFE64BA1B7E7ADF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B8DC817750DC4111AFE64BA1B7E7ADF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B8DC817750DC4111AFE64BA1B7E7ADF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B8DC817750DC4111AFE64BA1B7E7ADF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B8DC817750DC4111AFE64BA1B7E7ADF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B8DC817750DC4111AFE64BA1B7E7ADF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B8DC817750DC4111AFE64BA1B7E7ADF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B8DC817750DC4111AFE64BA1B7E7ADF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B8DC817750DC4111AFE64BA1B7E7ADF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Expected Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Expected Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Expected Sales</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B8DC817750DC4111AFE64BA1B7E7ADF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Actual Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Actual Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Actual Sales</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B8DC817750DC4111AFE64BA1B7E7ADF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Expected Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Expected Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Expected Profit</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B8DC817750DC4111AFE64BA1B7E7ADF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Actual Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Actual Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Actual Profit</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B8DC817750DC4111AFE64BA1B7E7ADF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B8DC817750DC4111AFE64BA1B7E7ADF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B8DC817750DC4111AFE64BA1B7E7ADF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B8DC817750DC4111AFE64BA1B7E7ADF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B8DC817750DC4111AFE64BA1B7E7ADF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Manager</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Manager]</local-name>
            <parent-name>[Managers]</parent-name>
            <remote-alias>Manager</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Managers_4B98B596995146CCB18528E0723F6201]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (Managers)]</local-name>
            <parent-name>[Managers]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Managers_4B98B596995146CCB18528E0723F6201]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Returned Orders]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returned Orders_56B47E98E57847B7BA96E87C67380F07]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Returned Orders)]</local-name>
            <parent-name>[Returned Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returned Orders_56B47E98E57847B7BA96E87C67380F07]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Return Reason</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Return Reason]</local-name>
            <parent-name>[Returned Orders]</parent-name>
            <remote-alias>Return Reason</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returned Orders_56B47E98E57847B7BA96E87C67380F07]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Market]' role='dimension' type='nominal' />
      <column datatype='string' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Managers' datatype='table' name='[__tableau_internal_object_id__].[Managers_4B98B596995146CCB18528E0723F6201]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_B8DC817750DC4111AFE64BA1B7E7ADF8]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Returned Orders' datatype='table' name='[__tableau_internal_object_id__].[Returned Orders_56B47E98E57847B7BA96E87C67380F07]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Sub-Category:nk]' palette='tableau-20' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Market:nk]' palette='tableau-10' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;EMEA&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;LATAM&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;EU&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;APAC&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Republic of the Congo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Myanmar (Burma)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Adana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Al Qahirah&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Anhui&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ardahan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Asyut&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baja California&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Basilicata&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bihar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brasov&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cajamarca&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Catalonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chiapas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Coimbra&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Daegu&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Diyarbakir&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Elazig&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Federal District&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gauteng&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greater Poland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Haifa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hims&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iasi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Isparta&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jizzakh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kano&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Khánh Hòa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Klaipeda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lagunes&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Littoral&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madhya Pradesh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Manzini&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Matabeleland North&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morelos&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nariño&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nigde&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nouakchott&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Panevezys&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Piura&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Puebla&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ras Al Khaymah&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ruvuma&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sancti Spíritus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Siirt&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Suhaj&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tanga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tianjin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ulaanbaatar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Värmland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vratsa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yangon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zhytomyr&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Abia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Al Hudaydah&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Amman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aquitaine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ashgabat&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ayacucho&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bangkok&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgorod&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bolu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burgas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Canterbury&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chaguanas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chuquisaca&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Corrientes&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Diana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Durrës&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Espírito Santo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fujian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gombe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guerrero&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Haute-Matsiatra&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hrodna&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Inhambane&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jeju&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kalimantan Selatan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Katsina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kigali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;La Pampa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liguria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lower Saxony&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Manawatu-Wanganui&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mehedinti&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mono&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nagasaki&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Holland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ogun&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Osun&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pernambuco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portuguesa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Queensland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Risaralda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Samsun&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sarawak&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shizuoka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Södermanland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Stara Zagora&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tabuk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Telangana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trabzon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uusimaa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vinnytsya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;White Nile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zambezia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Acre&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Al Marqab&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ancash&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aragua&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Astrakhan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bacau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Barahona&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Benue&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Boyacá&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bushehr&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Carinthia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chelyabinsk&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cluj&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cross River&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Distrito Capital&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eastern Cape&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Extremadura&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Galicia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grand Casablanca&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gunma&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Heilongjiang&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Huila&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iringa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jiangxi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kampala&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kindia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;La Vega&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Limousin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lucerne&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maniema&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maseru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mérida&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montserrado&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Namibe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Newfoundland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Northern&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Okayama&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Overijssel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Picardy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Primorsko-Goranska&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Quintana Roo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rize&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Luis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Savanes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sibiu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sonora&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Suceava&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Taizz&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tunis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vallee Du Bandama&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vlorë&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Xinjiang Uygur&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zealand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ajman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Alger&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antalya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Atlántida&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bali&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bauchi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bishkek&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brittany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central Equatoria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chinandega&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dar Es Salaam&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dolj&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Entre Ríos&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Flemish Brabant&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guangdong&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Halland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hokkaido&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Izmir&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kabardino-Balkariya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Karbala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kherson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kordestan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Las Tunas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lorestan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maharashtra&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maramures&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mato Grosso do Sul&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Minas Gerais&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mpumalanga&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Neamt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nitra&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nueva Esparta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Parana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Plovdiv&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Qaraghandy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saida&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Santa Cruz&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sergipe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sindh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Dublin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sumatera Barat&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tarija&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tizi Ouzou&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Upper Normandy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Veneto&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wellington&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yevrey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zulia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Adiyaman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ankara&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Arequipa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Atacama&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Baja California Sur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Basque Country&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bihor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bremen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Calabarzon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Catamarca&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chiba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cojedes&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Daejeon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Djelfa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Elbasan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Federation of Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gaziantep&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Groningen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hainan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hirat&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ibaraki&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Istanbul&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jubbada Hoose&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kharkiv&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kocaeli&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lambayeque&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ljubljana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Madrid&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maputo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Matagalpa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Michoacán&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morogoro&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;National Capital&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nova Scotia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Opole&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Papua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Plateau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Punjab&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Razavi Khorasan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saarland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sanliurfa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Selangor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sikasso&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Chungcheong&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sulawesi Tengah&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tanger-Tétouan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Timis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ulsan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Varna&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waikato&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yaracuy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ziguinchor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ad Dawhah&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Al Minufiyah&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andalusía&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Arauca&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Asturias&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Baden-Württemberg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bas-Congo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Berlin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Braga&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Buskerud&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Casanare&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cherkasy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Coahuila&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cundinamarca&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Distrito Federal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ebonyi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Extreme-Nord&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Galway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grand Gedeh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gyeonggi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Henan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hunan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Irkutsk&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jilin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kanagawa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kerala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kinshasa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lacs&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Limpopo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luhansk&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Manipur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mashonaland West&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mersin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mopti&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nampula&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Niamey&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Northern Mindanao&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oyo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pichincha&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Provence-Alpes-Côte dAzur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rabat-Salé-Zemmour-Zaer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rogaland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Luis Potosí&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saxony&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sichuan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sonsonate&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sucre&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tamaulipas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thies&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tuscany&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Valparaíso&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Volyn&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yalova&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zeeland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Al Fayyum&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Amasya&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Apulia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ash Sharqiyah&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Auvergne&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bandundu&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bejaia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bolívar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bulawayo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canelones&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ceuta&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chongqing&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Córdoba&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dhaka&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eskisehir&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Friuli-Venezia Giulia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Goiás&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guelma&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hatay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hovedstaden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Imo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jawa Tengah&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kahramanmaras&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kastamonu&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Khyber Pakhtunkhwa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kymenlaakso&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liberec&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Manabi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mecklenburg-Vorpommern&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mykolayiv&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nevsehir&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oaxaca&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oslo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Perak&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pomerania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Qostanay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rio Grande do Sul&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Salta&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Santo Domingo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shanxi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Skikda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Splitsko-Dalmatinska&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tabasco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tekirdag&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tolima&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uttar Pradesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Villa Clara&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Western Cape&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zacatecas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abruzzi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Al Iskandariyah&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Amur&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ar Raqqah&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Asir&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aydin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bangui&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bengkulu&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Borgou&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burgundy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caquetá&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Champagne-Ardenne&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cidade De Maputo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Corsica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Diffa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Düzce&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Est&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fukui&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gorj&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guizhou&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hawkes Bay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Huambo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Inner Mongolia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jerusalem&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kalimantan Timur&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kaunas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kigoma&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;La Paz&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lima&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Luanda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mandoul&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Meknès-Tafilalet&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Monseñor Nouel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nairobi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Lebanon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;OHiggins&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Otago&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pernik&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Potosí&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Querétaro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rivera&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Cristóbal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sardinia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shkodër&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sofala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Stavropol&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Táchira&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Trengganu&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Valcea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zamfara&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Al Basrah&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Alsace&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Anzoátegui&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Artibonite&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Auckland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bamako&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Beijing&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Boeny&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buenos Aires&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Campeche&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Centre&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chocó&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Copperbelt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Delta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Drenthe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Escuintla&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Free State&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gisborne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Harjumaa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hordaland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jammu and Kashmir&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kafr Ash Shaykh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kasai-Oriental&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Khulna&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kwara&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lesser Poland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Los Lagos&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malatya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Maritime&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mazandaran&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Misratah&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mures&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Neuquén&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norte de Santander&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nyanza&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Osh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pazardzhik&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Poitou-Charentes&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Qinghai&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rio de Janeiro&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saitama&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Santiago de Cuba&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shandong&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sivas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Southern&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Surxondaryo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tbilisi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tokat&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Victoria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Western&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yucatán&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Adamaoua&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Al Minya&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Andhra Pradesh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Arbil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Asunción&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Baghdad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Basel-Stadt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bern&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Braila&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Buzau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Castile and León&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chernihiv&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Coast&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cuscatlán&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dix-Huit Montagnes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Edirne&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;F.C.T.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gangwon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Granma&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gyeongsangnam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hesse&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hunedoara&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ishikawa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jinja&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kandahar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kerman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kirovohrad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laghouat&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lisboa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lusaka&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Manisa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Masovia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Meta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Moquegua&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Namur&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Niari&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Northern Territory&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Olomouc&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pahang&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Piedmont&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Provincia de Buenos Aires&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rajasthan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rondônia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Pedro de Macorís&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saxony-Anhalt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sicily&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Souss-Massa-Draâ&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sud&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tambov&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thủ Dô Hà Nội&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tyrol&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Van&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Voronezh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yamaguchi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zhambyl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Aksaray&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Alibori&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Antioquia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Atlantique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Balikesir&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bavaria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brussels&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Callao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central Jutland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chiriquí&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dayr Az Zawr&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Donetsk&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Enugu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gezira&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guangxi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hamadan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Holguín&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Igdir&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jakarta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kabarole&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Karnataka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Khmelnytskyy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kuala Lumpur&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lazio&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Loreto&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Maranhão&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Matruh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mtwara&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nord&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nuevo León&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Orientale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pavlodar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Plzen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Qashqadaryo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rhône-Alpes&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Catherine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Setúbal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Holland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sumatera Selatan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tartumaa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tlemcen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uppsala&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Veracruz&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Bengal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yobe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zürich&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Akwa Ibom&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Almaty&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Antofagasta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Arkhangelsk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Atsimo-Andrefana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Balti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bay of Plenty&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bistrita-Nasaud&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bryansk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Camagüey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central Luzon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chisinau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Constanta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Donga&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Equateur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Franche-Comté&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gharb-Chrarda-Béni Hssen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guantánamo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hamburg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Homyel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ilam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jalisco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kabul&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kars&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Khomas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kumanovo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lebap&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lori&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Makkah&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marche&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mayabeque&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Miranda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Muharraq&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Negeri Sembilan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nord-Ouest&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nusa Tenggara Barat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oruro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pays de la Loire&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Podgorica&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Qazvin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Riau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Michael&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Santander&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sevastopol&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sirnak&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Khorasan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sumatera Utara&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tasmania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tocantins&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Usak&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;West Flanders&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yogyakarta&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Al Buhayrah&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Amapá&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Aomori&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Arusha&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Australian Capital Territory&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Banaadir&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Beirut&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bogota&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bujumbura-Mairie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canakkale&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cesar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Choluteca&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cordillera&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denizli&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Duarte&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Esfahan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Friesland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Giurgiu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guayas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Haryana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hormozgan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Imereti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jawa Barat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kagawa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kassala&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Khuzestan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kwazulu-natal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liaoning&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Los Rios&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maluku&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Markazi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mbeya&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mwanza&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Brabant&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nzérékoré&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Osjecko-Baranjska&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Poltava&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Qom&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rio Grande do Norte&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Salah Ad Din&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Santiago del Estero&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shanghai&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Skåne&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Southland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sylhet&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tehran&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tokyo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Utrecht&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vienna&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Western Australia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yunnan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Al Gharbiyah&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Amazonas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Aqmola&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ashanti&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Aveiro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Banghazi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bekes&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bolivar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bur Said&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cantabria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chaco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chubut&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cork&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dhi Qar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Durango&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Espaillat&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fromager&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Golestan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guelmim-Es Semara&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Haut-Sassandra&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hradec Kralove&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jawa Timur&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kalimantan Barat&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Katanga&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kiên Giang&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;La Libertad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Liège&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lower Normandy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Managua&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marrakech-Tensift-El Haouz&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Medea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Monagas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nagano&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Odisha&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Osmaniye&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Peravia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Porto&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Quebec&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Río Negro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Salzburg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;São Paulo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shinyanga&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sliven&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St. Gallen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tabora&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tel Aviv&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tottori&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uttarakhand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vilnius&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Western Visayas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zagrebacka&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Afyonkarahisar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alagoas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Annaba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Arges&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Atakora&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Baki&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Batman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bingol&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brest&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Calabria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ceará&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chihuahua&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colima&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dagestan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Emilia-Romagna&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fès-Boulemane&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gelderland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hainaut&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hiroshima&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ibb&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ivano-Frankivsk&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jujuy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kara&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Khartoum&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Konya&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Languedoc-Roussillon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lodz&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Magallanes y Antártica Chilena&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mara&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Matanzas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Midi-Pyrénées&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moscow&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Navarra&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ninawa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Novgorod&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oran&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pará&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Plateaux&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Puno&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Red Sea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sabah&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Semnan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Silesia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sulawesi Tenggara&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Taranaki&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tỉnh Cần Thơ&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Umbria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Västra Götaland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yaroslavl&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Žilina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Adamawa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Al Qadisiyah&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Andijan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ardabil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Aswan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bahia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bashkortostan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brandenburg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cabo Delgado&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Castile-La Mancha&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chhattisgarh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cochabamba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dà Nang&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Diyala&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Edo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fars&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gansu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greater Accra&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gyor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hidalgo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hyogo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Isla de la Juventud&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jizan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kankan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kermanshah&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kirsehir&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lagos&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Litoral&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lviv&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Manitoba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;México&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Moravian-Silesian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nangarhar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Niassa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Northland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ondo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pinar del Río&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Puducherry&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rajshahi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Roraima&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Salvador&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Schleswig-Holstein&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sidi Bel Abbes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Australia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sud-Ouest&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tamil Nadu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Thuringia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ucayali&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vargas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vrancea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yambol&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zhejiang&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Abuja Capital Territory&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Al Jawf&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Analamanga&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ar Riyad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Assam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Azuay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bani Suwayf&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benguela&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Borno&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bursa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Carabobo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ciego de Ávila&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cortés&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dire Dawa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Flanders&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estelí&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fukuoka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grad Zagreb&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gujarat&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hebei&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hubei&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jharkhand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kaliningrad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kayes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kilimanjaro&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;La Rioja&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lima (city)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lublin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Manica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Melilla&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nakhon Ratchasima&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New South Wales&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Rhine-Westphalia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ouémé&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Phnom Penh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prague&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Quezaltenango&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rivers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Fernando&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saskatchewan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shumen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sofiya-Grad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Stockholm&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tadla-Azilal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ternopil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Trentino-Alto Adige&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Valenciana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vitsyebsk&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Woqooyi Galbeed&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zanjan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Al Bahr Al Ahmar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Almaty City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Antwerp&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Artemisa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Atsinanana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Baluchistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bechar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bitola&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Budapest&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Campania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Centrale&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chittagong&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Constantine&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Delhi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Doukkala-Abda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Erzurum&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Francisco Morazán&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gilan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guárico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Harare&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ile-de-France&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jambi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kaduna&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kasai-Occidental&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Khorezm&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kutahya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;León&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lorraine&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malanje&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mardin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Maysan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Misiones&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Murcia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nelson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nord-Pas-de-Calais&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nusa Tenggara Timur&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Osaka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Paysandú&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Podlaskie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Qina&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rift Valley&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint-Louis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Santiago&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Shaanxi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sistan Va Baluchestan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Kivu&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sumy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taza-Al Hoceima-Taounate&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tochigi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Usti nad Labem&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vest-Agder&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yoro&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aichi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Alberta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Anseba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Arica y Parinacota&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Atlántico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Balearic Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Batna&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Biobio&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;British Columbia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Caldas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chimaltenango&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colón&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dakar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dnipropetrovsk&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finland Proper&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Geneva&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guanajuato&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hajdu-Bihar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ho Chí Minh City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ica&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ivanovo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Junín&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Karaman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Khatlon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Korçë&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lara&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lombardy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Magdalena&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maradi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mato Grosso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mie&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mostaganem&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nayarit&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ningxia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Novosibirsk&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ordu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paraíba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pleven&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pwani&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rhineland-Palatinate&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saga&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Santa Catarina&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Seoul&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sinaloa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Denmark&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sulawesi Utara&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tarapacá&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tipaza&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Upper Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vaud&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Yazd&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zinder&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aceh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Al Madinah&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Anambra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arad&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Astana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Babil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Banská Bystrica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Beni&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Botosani&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Busan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Caras-Severin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chaouia-Ouardigha&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cienfuegos&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Corum&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eastern&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Estuaire&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Galati&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Granada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gulu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hedmark&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Huehuetenango&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Irbid&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jiangsu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kaluga&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kayseri&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kilis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;La Romana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Limburg&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lubusz&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Manicaland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Masaya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mendoza&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montevideo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Namangan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North-West&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oita&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ouest&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Piauí&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prahova&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Quindío&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rivne&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Juan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Satu Mare&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Šiauliai&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sokoto&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Styria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taipei City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tete&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tripura&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Valle del Cauca&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vladimir&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zaporizhzhya&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Managers' id='Managers_4B98B596995146CCB18528E0723F6201'>
            <properties context=''>
              <relation connection='excel-direct.1n51tdk0mip4wp16iyta50ieziiw' name='Managers' table='[Managers$]' type='table'>
                <columns gridOrigin='A1:B14:no:A1:B14:0' header='yes' outcome='6'>
                  <column datatype='string' name='Manager' ordinal='0' />
                  <column datatype='string' name='Region' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Orders' id='Orders_B8DC817750DC4111AFE64BA1B7E7ADF8'>
            <properties context=''>
              <relation connection='excel-direct.1n51tdk0mip4wp16iyta50ieziiw' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:AB10001:no:A1:AB10001:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Expected Ship Date' ordinal='3' />
                  <column datatype='date' name='Actual Ship Date' ordinal='4' />
                  <column datatype='string' name='Ship Mode' ordinal='5' />
                  <column datatype='string' name='Customer ID' ordinal='6' />
                  <column datatype='string' name='Customer Name' ordinal='7' />
                  <column datatype='string' name='Gender' ordinal='8' />
                  <column datatype='string' name='Segment' ordinal='9' />
                  <column datatype='string' name='City' ordinal='10' />
                  <column datatype='string' name='State' ordinal='11' />
                  <column datatype='string' name='Country' ordinal='12' />
                  <column datatype='string' name='Postal Code' ordinal='13' />
                  <column datatype='string' name='Market' ordinal='14' />
                  <column datatype='string' name='Region' ordinal='15' />
                  <column datatype='string' name='Product ID' ordinal='16' />
                  <column datatype='string' name='Category' ordinal='17' />
                  <column datatype='string' name='Sub-Category' ordinal='18' />
                  <column datatype='string' name='Product Name' ordinal='19' />
                  <column datatype='real' name='Expected Sales' ordinal='20' />
                  <column datatype='real' name='Actual Sales' ordinal='21' />
                  <column datatype='real' name='Expected Profit' ordinal='22' />
                  <column datatype='real' name='Actual Profit' ordinal='23' />
                  <column datatype='integer' name='Quantity' ordinal='24' />
                  <column datatype='real' name='Discount' ordinal='25' />
                  <column datatype='real' name='Shipping Cost' ordinal='26' />
                  <column datatype='string' name='Order Priority' ordinal='27' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Returned Orders' id='Returned Orders_56B47E98E57847B7BA96E87C67380F07'>
            <properties context=''>
              <relation connection='excel-direct.1n51tdk0mip4wp16iyta50ieziiw' name='Returned Orders' table='[&apos;Returned Orders$&apos;]' type='table'>
                <columns gridOrigin='A1:C1174:no:A1:C1174:0' header='yes' outcome='2'>
                  <column datatype='string' name='Returned' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='string' name='Return Reason' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Region]' />
              <expression op='[Region (Managers)]' />
            </expression>
            <first-end-point object-id='Orders_B8DC817750DC4111AFE64BA1B7E7ADF8' />
            <second-end-point object-id='Managers_4B98B596995146CCB18528E0723F6201' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Order ID]' />
              <expression op='[Order ID (Returned Orders)]' />
            </expression>
            <first-end-point object-id='Orders_B8DC817750DC4111AFE64BA1B7E7ADF8' />
            <second-end-point object-id='Returned Orders_56B47E98E57847B7BA96E87C67380F07' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Country and Profit sales word'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;[&lt;</run>
            <run>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Market:nk]</run>
            <run>&gt;]</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Global Superstore)' name='federated.1vxiqdt0t4h5oo1dk3acr0wq9441' />
          </datasources>
          <datasource-dependencies datasource='federated.1vxiqdt0t4h5oo1dk3acr0wq9441'>
            <column datatype='real' name='[Actual Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Market]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Actual Profit]' derivation='Sum' name='[sum:Actual Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Market:nk]'>
            <groupfilter function='member' level='[none:Market:nk]' member='&quot;LATAM&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Market:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <color column='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Country:nk]' />
              <size column='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[sum:Actual Profit:qk]' />
              <text column='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{81C905FB-0F89-40DC-A2CD-FD34921B57A0}' />
    </worksheet>
    <worksheet name='Discrete Monthly chart regiion wise by number of orders wordcloud'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;[&lt;</run>
            <run>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[mn:Order Date:ok]</run>
            <run>&gt;]&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Global Superstore)' name='federated.1vxiqdt0t4h5oo1dk3acr0wq9441' />
          </datasources>
          <datasource-dependencies datasource='federated.1vxiqdt0t4h5oo1dk3acr0wq9441'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Order ID]' derivation='CountD' name='[ctd:Order ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[mn:Order Date:ok]'>
            <groupfilter function='member' level='[mn:Order Date:ok]' member='6' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[mn:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <color column='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Region:nk]' />
              <size column='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[ctd:Order ID:qk]' />
              <text column='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F6EA6502-ABA3-4F56-B5F0-5F81EF42DDD7}' />
    </worksheet>
    <worksheet name='Indian states word cloud '>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; [&lt;</run>
            <run>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Category:nk]</run>
            <run>&gt; - &lt;</run>
            <run>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Segment:nk]</run>
            <run>&gt; ]&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Global Superstore)' name='federated.1vxiqdt0t4h5oo1dk3acr0wq9441' />
          </datasources>
          <datasource-dependencies datasource='federated.1vxiqdt0t4h5oo1dk3acr0wq9441'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Category:nk]'>
            <groupfilter function='member' level='[none:Category:nk]' member='&quot;Office Supplies&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Segment:nk]'>
            <groupfilter function='member' level='[none:Segment:nk]' member='&quot;Home Office&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Country:nk]</column>
            <column>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Segment:nk]</column>
            <column>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <color column='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:State:nk]' />
              <size column='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[sum:Quantity:qk]' />
              <text column='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D610483D-6761-4182-962B-6DFBC8525FDF}' />
    </worksheet>
    <worksheet name='Monthly profit by region '>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; [  &lt;</run>
            <run>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Category:nk]</run>
            <run>&gt; - &lt;</run>
            <run>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Ship Mode:nk]</run>
            <run>&gt; ]&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Global Superstore)' name='federated.1vxiqdt0t4h5oo1dk3acr0wq9441' />
          </datasources>
          <datasource-dependencies datasource='federated.1vxiqdt0t4h5oo1dk3acr0wq9441'>
            <column datatype='real' name='[Actual Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Actual Profit]' derivation='Sum' name='[sum:Actual Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Category:nk]'>
            <groupfilter function='member' level='[none:Category:nk]' member='&quot;Office Supplies&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Ship Mode:nk]'>
            <groupfilter function='member' level='[none:Ship Mode:nk]' member='&quot;Second Class&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Category:nk]</column>
            <column>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Ship Mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[sum:Actual Profit:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[sum:Actual Profit:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Region:nk] * [federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[sum:Actual Profit:qk])</rows>
        <cols>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[tmn:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{BD2D0F76-0717-49B6-8EB6-84FACDB36FC6}' />
    </worksheet>
    <worksheet name='Monthly profit by sub category '>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; [&lt;</run>
            <run>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Order Priority:nk]</run>
            <run>&gt; - &lt;</run>
            <run>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Market:nk]</run>
            <run>&gt; ]&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Global Superstore)' name='federated.1vxiqdt0t4h5oo1dk3acr0wq9441' />
          </datasources>
          <datasource-dependencies datasource='federated.1vxiqdt0t4h5oo1dk3acr0wq9441'>
            <column datatype='real' name='[Actual Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Market]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order Priority]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Priority]' derivation='None' name='[none:Order Priority:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Actual Profit]' derivation='Sum' name='[sum:Actual Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Market:nk]'>
            <groupfilter function='member' level='[none:Market:nk]' member='&quot;APAC&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Order Priority:nk]'>
            <groupfilter function='member' level='[none:Order Priority:nk]' member='&quot;High&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Market:nk]</column>
            <column>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Order Priority:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[sum:Actual Profit:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[sum:Actual Profit:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Sub-Category:nk] * [federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[sum:Actual Profit:qk])</rows>
        <cols>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[tmn:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{2F295F49-F635-4587-B754-DBFB8E2F2471}' />
    </worksheet>
    <worksheet name='Monthly sales by gender motion  chart ( animated line chart)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Global Superstore)' name='federated.1vxiqdt0t4h5oo1dk3acr0wq9441' />
          </datasources>
          <datasource-dependencies datasource='federated.1vxiqdt0t4h5oo1dk3acr0wq9441'>
            <column datatype='real' name='[Actual Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Actual Sales]' derivation='Sum' name='[sum:Actual Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Gender:nk]' />
              <text column='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[sum:Actual Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Gender:nk] * [federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[sum:Actual Sales:qk])</rows>
        <cols>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[tmn:Order Date:qk]</cols>
        <pages>
          <column>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[tmn:Order Date:ok]</column>
        </pages>
        <page-trail-options enabled='true' lines='true' mark-type='all' />
      </table>
      <simple-id uuid='{A6C84AC1-EF4B-40CF-BB1C-4D2F1F20B40B}' />
    </worksheet>
    <worksheet name='Monthly sales by region'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; [ &lt;</run>
            <run>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Category:nk]</run>
            <run>&gt; - &lt;</run>
            <run>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Segment:nk]</run>
            <run>&gt; ]&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Global Superstore)' name='federated.1vxiqdt0t4h5oo1dk3acr0wq9441' />
          </datasources>
          <datasource-dependencies datasource='federated.1vxiqdt0t4h5oo1dk3acr0wq9441'>
            <column datatype='real' name='[Actual Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Actual Sales]' derivation='Sum' name='[sum:Actual Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Category:nk]'>
            <groupfilter function='member' level='[none:Category:nk]' member='&quot;Furniture&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Segment:nk]'>
            <groupfilter function='member' level='[none:Segment:nk]' member='&quot;Consumer&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Segment:nk]</column>
            <column>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[sum:Actual Sales:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[sum:Actual Sales:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Region:nk] * [federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[sum:Actual Sales:qk])</rows>
        <cols>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[tmn:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{A30E11DB-171B-4B06-A0CC-5150B493C049}' />
    </worksheet>
    <worksheet name='Profit by markit donut Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;[&lt;</run>
            <run>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Segment:nk]</run>
            <run>&gt; - &lt;</run>
            <run>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Order Date:ok]</run>
            <run>&gt; ]</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Global Superstore)' name='federated.1vxiqdt0t4h5oo1dk3acr0wq9441' />
          </datasources>
          <datasource-dependencies datasource='federated.1vxiqdt0t4h5oo1dk3acr0wq9441'>
            <column datatype='real' name='[Actual Profit]' role='measure' type='quantitative' />
            <column caption='AVG(0)' datatype='real' name='[Calculation_749004913963134980]' role='measure' type='quantitative' user:unnamed='Sheet 12'>
              <calculation class='tableau' formula='AVG(0)' />
            </column>
            <column datatype='string' name='[Market]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Actual Profit]' derivation='Sum' name='[pcto:sum:Actual Profit:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_749004913963134980]' derivation='User' name='[usr:Calculation_749004913963134980:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Order Date:ok]'>
            <groupfilter function='member' level='[none:Order Date:ok]' member='#2020-02-20#' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Segment:nk]'>
            <groupfilter function='member' level='[none:Segment:nk]' member='&quot;Consumer&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Segment:nk]</column>
            <column>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[usr:Calculation_749004913963134980:qk]' field-type='quantitative' fold='true' max='0.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[usr:Calculation_749004913963134980:qk]' scope='rows' value='false' />
            <format attr='display' class='1' field='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[usr:Calculation_749004913963134980:qk]' scope='rows' value='false' />
            <encoding attr='space' class='0' field='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[usr:Calculation_749004913963134980:qk]' field-type='quantitative' max='0.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[pcto:sum:Actual Profit:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[usr:Calculation_749004913963134980:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Market:nk]' />
              <wedge-size column='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[pcto:sum:Actual Profit:qk]' />
              <text column='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[pcto:sum:Actual Profit:qk]' />
              <text column='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Market:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Market:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Market:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% of Total Actual Profit along Table (Across):	</run>
                <run bold='true'><![CDATA[<[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[pcto:sum:Actual Profit:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='2.5082871913909912' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[usr:Calculation_749004913963134980:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.97751379013061523' />
                <format attr='mark-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[usr:Calculation_749004913963134980:qk] + [federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[usr:Calculation_749004913963134980:qk])</rows>
        <cols />
      </table>
      <simple-id uuid='{D3A24DAB-9755-48C5-AB78-BD34B3CF293B}' />
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Global Superstore)' name='federated.1vxiqdt0t4h5oo1dk3acr0wq9441' />
          </datasources>
          <datasource-dependencies datasource='federated.1vxiqdt0t4h5oo1dk3acr0wq9441'>
            <column datatype='real' name='[Actual Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Market]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Actual Sales]' derivation='Sum' name='[sum:Actual Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Market:nk]'>
            <groupfilter function='member' level='[none:Market:nk]' member='&quot;Canada&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Market:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[sum:Actual Sales:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[sum:Actual Sales:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[sum:Actual Sales:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Sub-Category:nk] * [federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[sum:Actual Sales:qk])</rows>
        <cols>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[tmn:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{2612227E-E1E9-4D04-AE18-9C62A6707151}' />
    </worksheet>
    <worksheet name='Sheet 11'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{6B38A02D-8350-4062-8D22-165FDC6DFA1B}' />
    </worksheet>
    <worksheet name='Sheet 13'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Global Superstore)' name='federated.1vxiqdt0t4h5oo1dk3acr0wq9441' />
          </datasources>
          <datasource-dependencies datasource='federated.1vxiqdt0t4h5oo1dk3acr0wq9441'>
            <column caption='AVG(0)' datatype='real' name='[Calculation_749004913966530567]' role='measure' type='quantitative' user:unnamed='Sheet 13'>
              <calculation class='tableau' formula='AVG(0)' />
            </column>
            <column-instance column='[Calculation_749004913966530567]' derivation='User' name='[usr:Calculation_749004913966530567:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[usr:Calculation_749004913966530567:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{CCBE1D53-FD5B-404D-A192-53D5D4736220}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Global Superstore)' name='federated.1vxiqdt0t4h5oo1dk3acr0wq9441' />
          </datasources>
          <datasource-dependencies datasource='federated.1vxiqdt0t4h5oo1dk3acr0wq9441'>
            <column datatype='real' name='[Actual Sales]' role='measure' type='quantitative' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Actual Sales]' derivation='Sum' name='[sum:Actual Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[sum:Actual Sales:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[sum:Actual Sales:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Sub-Category:nk] * [federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[sum:Actual Sales:qk])</rows>
        <cols>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[tmn:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{F319A628-BBD0-47CF-90C6-89C52A37EABC}' />
    </worksheet>
    <worksheet name='Shipping cost by category by donut chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; &lt;</run>
            <run>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Region:nk]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Global Superstore)' name='federated.1vxiqdt0t4h5oo1dk3acr0wq9441' />
          </datasources>
          <datasource-dependencies datasource='federated.1vxiqdt0t4h5oo1dk3acr0wq9441'>
            <column caption='avg(0)' datatype='real' name='[Calculation_749004913957425154]' role='measure' type='quantitative' user:unnamed='Sheet 10'>
              <calculation class='tableau' formula='avg(0)' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Shipping Cost]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Shipping Cost]' derivation='Sum' name='[pcto:sum:Shipping Cost:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Shipping Cost]' derivation='Sum' name='[sum:Shipping Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_749004913957425154]' derivation='User' name='[usr:Calculation_749004913957425154:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;Africa&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[usr:Calculation_749004913957425154:qk]' field-type='quantitative' max='0.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[usr:Calculation_749004913957425154:qk]' field-type='quantitative' fold='true' max='0.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='display' class='1' field='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[usr:Calculation_749004913957425154:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[usr:Calculation_749004913957425154:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[pcto:sum:Shipping Cost:qk:3]' value='p0.0%' />
            <format attr='text-format' field='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[sum:Shipping Cost:qk]' value='c&quot;$&quot;#,##0,.0K;(&quot;$&quot;#,##0,.0K)' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern-only' scope='rows' value='dashed' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <_.fcp.MarkAnimation.true...style-rule element='animation'>
            <format attr='animation-duration' value='2' />
          </_.fcp.MarkAnimation.true...style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[usr:Calculation_749004913957425154:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Category:nk]' />
              <wedge-size column='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[sum:Shipping Cost:qk]' />
              <text column='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[pcto:sum:Shipping Cost:qk:3]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Category:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Category:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% of Total Shipping Cost along Table (Across):	</run>
                <run bold='true'><![CDATA[<[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[pcto:sum:Shipping Cost:qk:3]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Shipping Cost:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[sum:Shipping Cost:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='4.0442090034484863' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[usr:Calculation_749004913957425154:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[sum:Shipping Cost:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.9230387210845947' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[usr:Calculation_749004913957425154:qk] + [federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[usr:Calculation_749004913957425154:qk])</rows>
        <cols>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Gender:nk]</cols>
      </table>
      <simple-id uuid='{9BEE8FEF-1FFB-4992-94E3-5F55136705F7}' />
    </worksheet>
    <worksheet name='Sub Category and sales word cloud '>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; [&lt;</run>
            <run>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Region:nk]</run>
            <run>&gt;]</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Global Superstore)' name='federated.1vxiqdt0t4h5oo1dk3acr0wq9441' />
          </datasources>
          <datasource-dependencies datasource='federated.1vxiqdt0t4h5oo1dk3acr0wq9441'>
            <column datatype='real' name='[Actual Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Actual Sales]' derivation='Sum' name='[sum:Actual Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;Africa&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Sub-Category:nk]' />
              <size column='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[sum:Actual Sales:qk]' />
              <text column='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Sub-Category:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Times New Roman'>&lt;</run>
                <run fontname='Times New Roman'>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Sub-Category:nk]</run>
                <run fontname='Times New Roman'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='13.672324180603027' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{69C33CF5-9843-4F4C-AFF7-817F5C3CD159}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Market:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Sub-Category:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Binders&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Market:nk]</field>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Sub-Category:nk]</field>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{250664D4-DFAD-4516-BCF4-3B2E85B2A872}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Sub-Category:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Art&quot;</bucket>
                </multibucket>
                <axis>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[sum:Actual Sales:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Sub-Category:nk]</field>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A25B403A-ECB0-46D0-A998-1E48720365DE}' />
    </window>
    <window class='worksheet' name='Monthly sales by region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Category:nk]' type='filter' />
            <card mode='radiolist' param='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Segment:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Region:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Canada&quot;</bucket>
                </multibucket>
                <axis>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[sum:Actual Sales:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Category:nk]</field>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Region:nk]</field>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Segment:nk]</field>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CF495E3A-7142-4D13-85D6-34143F85D54B}' />
    </window>
    <window class='worksheet' name='Monthly profit by sub category '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Order Priority:nk]' type='filter' />
            <card mode='radiolist' param='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Market:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Sub-Category:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Appliances&quot;</bucket>
                </multibucket>
                <axis>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[sum:Actual Profit:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Category:nk]</field>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Market:nk]</field>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Order Priority:nk]</field>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Region:nk]</field>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Segment:nk]</field>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Sub-Category:nk]</field>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BCB8C170-4224-4D50-853F-42F942335911}' />
    </window>
    <window class='worksheet' name='Monthly profit by region '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Ship Mode:nk]' type='filter' />
            <card mode='radiolist' param='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Category:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Category:nk]</field>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Region:nk]</field>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Segment:nk]</field>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Ship Mode:nk]</field>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8FF714BD-0684-455C-B79D-17D0A9411011}' />
    </window>
    <window class='worksheet' name='Sub Category and sales word cloud '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Region:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Region:nk]</field>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9F1749B1-517F-40A4-A8E3-546F8C107EEB}' />
    </window>
    <window class='worksheet' name='Country and Profit sales word'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Market:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Country:nk]</field>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Market:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6BFE57CC-38AE-42DD-9709-3339680E7A12}' />
    </window>
    <window class='worksheet' name='Indian states word cloud '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Category:nk]' type='filter' />
            <card mode='radiolist' param='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Segment:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Category:nk]</field>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Country:nk]</field>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Segment:nk]</field>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{211EAC73-72DF-4CED-89EC-F369B82E6673}' />
    </window>
    <window class='worksheet' name='Discrete Monthly chart regiion wise by number of orders wordcloud'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='163'>
            <card mode='slider' param='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[mn:Order Date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[mn:Order Date:ok]</field>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Customer Name:nk]</field>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Order ID:nk]</field>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Region:nk]</field>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Ship Mode:nk]</field>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F0BAD65C-BFD8-42EB-B3D2-787FF052BB31}' />
    </window>
    <window class='worksheet' name='Shipping cost by category by donut chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Region:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Category:nk]</field>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Gender:nk]</field>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4401AC95-DD31-4508-9AA8-C71B3AE464F6}' />
    </window>
    <window class='worksheet' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{0D1DB3B4-6529-427E-B686-38A97FCD8473}' />
    </window>
    <window class='worksheet' name='Profit by markit donut Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Order Date:ok]' type='filter' />
            <card param='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Segment:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Market:nk]</field>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Order Date:ok]</field>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B8769238-6832-4723-962A-754B0F3C49F3}' />
    </window>
    <window class='worksheet' name='Sheet 13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3FF9BD41-604E-48EB-BE72-64A1DFA8763D}' />
    </window>
    <window class='worksheet' maximized='true' name='Monthly sales by gender motion  chart ( animated line chart)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Gender:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2019-12-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[none:Gender:nk]</field>
            <field>[federated.1vxiqdt0t4h5oo1dk3acr0wq9441].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7D75859E-8D06-408E-8085-38B0F74CEDD8}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Country and Profit sales word' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29Z5BlSXaY9+U1z5t65X1XdbX3M7Pj12F2gcXuAguFKEBSiAAkQkE5iBTF
      nwpFMCgSBCGSAENkhECABEMKQCIAAoLjYhfrAIzrHtsz7aqrurw3z9vrUj/y1auqLt9dM9OD
      d7+Ijq737r15896XJ/PkyXNOCimlxMenSdE+6Qr4+HyS+ALg09T4AuDT1PgC4NPU+ALg09T4
      AuDT1PgC4NPU+ALg09T4AuDT1PgC4NPU+ALg09T4AuDT1PgC4NPU+ALg09T4AuDT1PgC4NPU
      +ALg09T4AuDT1PgC4NPU+ALg09T4AuDT1PgC4NPU+ALg09T4AuDT1PgC4NPU+ALg09T4AuDT
      1PgC4NPU+ALg09QYn3QFfD4ZpJTItTzYrvpCE4hkFEImQoh9r/VyJXAlWmusUY7Wkdz/fuUa
      uB4iHj6uRzgW/BGgifEW1iFkQiQAho77YBGZLh58oeWAZau/pURWrAMvkY6LtJzHrPHx448A
      zYwQiJYoQlP9oAgH8BbS0BYH1ChBrd7Qg3uMDEKgdbWo8x01mghDbxyWNRsCBiIagi1bUUjX
      U4IEEDQadfi48UcAH6CuEuXLEA6oz46Ld38eb24Nb24d9/5Co4FvvxDcsQX1Z7GKN7e2ech2
      cB8sqr8zRbzVnPrbcnDHFvAW03gL67h3Z3cv+2PAHwGaGdfDm1wGQFYsRDyMNtAOgLeYRqRi
      aJ0tSjhWsnhLGfT+9j2LE/Ew3sI60vUQuobMFNFa4wgh2LYNkamjn+lDaGpEcefWkJki4oB5
      xEeBPwI0M5qG1tOK1temGr7jNuYAslBBtCpVSAiBaIkhi9V9ixOaQERDyGIFpMTLFBtlPIws
      lHEnl3DHFpDpAnje8T7bIfFHgGZGoKw+moYIBZCREO7YPKItDkJs09kb5+9bnkBrT+AtZ5Gh
      gNLrTX3HaTJdRK7n0frbwdDx1vKHKPyjwR8BfDapWarhA1pLFG85C6j5gbeSRUtGDy4jEkTa
      Dt5qDtEW33XiLMs1REcSEQkqAdmwKH0C+CNAM+NJ3HtzwGZvrw93qUbbnUJOreDcmgZAxEKI
      vpbdy9nSyIUQaIkI3mIG7erQrqdrHYnGJBhNQxifXD8s/G1SfT4tWLd+D/P8jyN0EwB7/Hvo
      PVfQontPzA/CV4F8PjWIQARv6RYA0nPwFt9HhOtWqmoOWSuov6VEWmWkXcErp5GeWm/YcZ7n
      +iqQz6cH48TLWO/+X+h9TyHzC4h4NwgdZ/SbYATBLiMi7egDz1L93j/APPMVALziMubln8S5
      +8eIYAxZyyPivWr0+ISfycfn0IhgHFwL6dq4c++gD7wAdhkvN4sx8grGuR/DnX0TAC3ehXHy
      C+hDLyOrebCKeMUl9JNfxDj/DdzpVxFG0B8BfD5daF2XcJc+xMvPY1z4BtQKyPwizvh31PG2
      0zsvEiAdC5lf2Dyv/SzgW4F8PmUYA89Te+2fo3WeR2g6MhhHJHvRe68hggm8tbFdrxPhFkS8
      C73vGUQgirc2hrTLvhXI59OFlBJn4gfo3ZfQoh3qO6uEO/8OeB5a10VEtA1v6UP0nqtI6eGt
      3EPvuoCsFXDn3wUkWtclkK4vALuxNrnM7HsPtn3XdaaP3ksnPtL73v3O+wxcO0msPfGR3sdn
      E18F2oXiWo62E530XRlqfPdxuOu6tsNx90ffe3eSWDjAc+f7Gt/9wWujnO5r5cJQx7He69OI
      LwB7IHQN3dz5eqSU1IoV1qdWMMMB2oe6QAgyc2u0negEwHVccgtpWgc7kFJSzZdJz6wC0H6y
      m0AkqDwkpcSuWqxNLCEQODV7232Ka3lyC2li7QmSva2NazIzq6QGO8gvZ7ErFu3DXXs+h+t5
      eA8Jled5xy5on1Z8M+gRSU+vcPMProOA0nqB1QdLuI7L5PXRxjlOzWb6rfsA1AoVxv/yNkJT
      jfedf/eXVHJlAPLLWd773dfwbBcJ5JcygGr8M++O8+DV2+gBg/kPpxj93geq0UqYvHGfufcn
      mH33AfouzmZH4XvvTpLOV/jBe1P86z95D8tx+YNXR3Fd5Z3puB6/84M7jXotrBX4N//hPf7Z
      b7/Bb3//Nu/eV/7+1+/MMb+Wb5T7p9fHyRQq9WPz/Mvff4t/9ttv8P/95T0s26VmO/y/372F
      7XiNsr/7zgTzq3k+TvwRYA+mro+ycn++8XngqRHaR7qZun6fqz/xPKF4pHHMru3tzBVKRLj8
      Y881PruWQ3ZujXAywsTrd7n0tWeJ1iOw0jMrgBKgldEFnvlPP4um63Sf6+e933udSrZEOBml
      uJaj42Q3F7/6zIHxuwcxt5pnfq1Ab3ucn/3Rqxi6xtRStuG/L6VkYkEJZrZY4ze++T4//SNX
      6O9M8ObtOaaXczx9poeVTInUlnjf2ZUcT53uBqAlFuRnf/QqkaDJd96Z4M9vTvPlZ4ap2Q4P
      5tOcO9GOJ+H63Xk+f/WjnWc9jC8AezD0/FkGrp3c9p1dtUBAMHb4wG7XcZl5e5zM/BrS9Shn
      ipx88Tye4+HaDuGWnR6WtWKVUDKCpqveXQhBsruV4nqecDJKpCXGwNMjj934AVzX42RvK5+/
      OnhgeR88WOLzV08w2KUCVxLRIMuZ0oH36G1P8M7oIul8mULFUvEFQvDK08N88/o4ZwfbmFhI
      c7InhWk83oh2VHwV6Ahouob0JJ57+OCN+ZuTeK7L1W88zzM/9TmGnlcLMKL+5qW3Uxc3AgZ2
      1dqmp9dKVQLhoKqHoR+68Zu6jmVvDzes2S5G3QPTMHTOn2g/VHnlmk0qFjrUfTeo1Gz+5e/f
      IGBqXD3VXb+XOtbfkaBmu6QLFV79YJYvXPt4e3/wBeBIaIZOsreV6bfHcB0Xq1yjki2h6RpO
      xcKxbOyqxeKdGZx6o3Msm2AsjGbolNIFVsdV/KzQNKJtCeY/nMTzPCq5EvlFpWoEYiE0TWN1
      fBHpSXKLaYqrOeKdRw8ZHO5p4f3xJZy60NZsh/G5NH37mFo9T+LVncqKFasxH+hvT/DhxHJD
      MCtbVD8hBPaWeUOxoo6t5soMdiV58eIAwz0thIMmG/qVEIIvXD3B99+dIl+u0t0aO/LzPS6+
      CrQLwViYmXfGt80Bus71039lmJMvnWf6rTHe/73X0QMGw8+dJZSMMPD0CO///hsEoyHahrpI
      dCvf+YFrI4x+/wOWR+eItSeVFSiqrECnP3eR8Vdv897vvka0NU7rYAe6qaNpGhe+8jQTr99l
      9r0HBGMhLn39M+imgZTySOsEA11JRnpb+ZXfeZOWWIj1fIVXnh4mGjL3vGakL8W/+Pc3SESD
      auGpHq54fqiDd8cW+ZXfvU4sHCBfqnGyJwXApZOd/N/fusmbt+PYjsdKVqlGPa0xVjIlfvUP
      3wEgYOqY+ma/e2Gog3/3vdv8yLMnj0WlOyr+QlgTIKWkUnOwHJdQwCBobqpQlZpN0DTQtM3G
      50lJsax09WjYpFKziYYCm8cqFpoQjM6ssZIp8dUXTjfuYbsu0VAA23Eb5TquR6liETB1AqaO
      7XiEAkajbr/yO9f5mz/+NNF6RopHfUbrwQTVDz/ETadB1wkMDhC6dAmjo2Nb0M5WfAHwOTQr
      mRJ//MZ9zg22Yzkuf3Fzmv/uJz5Dxy4T+cMwv5bn9VtzaAL+48+ff+QRwM1kWP+1X6d68yZm
      Ty96Zwc4DtbUFLJSJfbDX6blp//6ruV/qgTAzSsbsZ7wXQU+CaSUrGbLjM+n0TXBxeFOoodI
      pbgXM8s5MsUql4Y70B9xpd0tFln5B78Ankfr3/yvCZw8udnbOw6Vmx9QvXWL1M/89K6r+R+J
      AEjHoXbvHtU7d/HKZbRIhOC5c4QunEcYjz7tSP/ar+NVq7T/jz9/jLX1+bQipST7W/8Ples3
      6Pr7fw+9ZY+Y5X049kmwvbhE+ld/FWtiksDJYbSWFuyZGQr/4ZuYg4N0//2/d9y39GlSvGKJ
      8quvkfypnzxS47cXFrFnZ4g8//zxCoCztsbqL/5jjM4Ouv7h/0ZgYGDzWDpN+fU3jvN2Pk2O
      PTONtCxCV68c6bra2BiFb37zeAVAeh7Z3/wtRDhM29/+2+ix7RMjo7WVxI99/bhu5+ODvbiI
      nmpBj++efe4wHJsAOMvLlG+8Rcff/Ts7Gv9uSMfBmprGHOhHCwa3H5MSe3oavaVl16FNWhbV
      W7epjY0hDIPAyWFCly4hzJ22ba9Ww1lYwJqawitXEIEAwVMjmCdOfGIZiZuVRqbo3ZJl1Www
      jUa+0EOVV64gIlHQt7tPrP0f/wJ7Zqbx2ejto/1v/TxC3+lmcWwCUHnrLYy2NkJXrh7qfK9U
      YvUf/SKd/+v/QmBo6KGDHuv/578i8tILJL/xjW2HnKVlVv7hL+BVqpgD/bi5PPk/+EOC58/R
      9j/899ssRM7qGiu/+I9xMxnM3l60aAQ3nyf7m79F6OJF2v7Wz28TPm81p9KDmwYgEZEgWn/7
      tnTfj4u3lkdWrX2TzALIqoU3tYJ+rv/Y7r2jLuki3swKBExAgqGjD3QgHsMev+/9ZlfRBjsh
      sLPZedMraCc6IWjiFSvIpSz6qZ79CzRNpGXtSOEYvnaVwAnlVmFNTWHPL+xZxLEJQG1iksDI
      yWNtLLvhrq+T+rn/ivC1awjTVKPF5BSrv/zLZH/zt2j9b/+bzR5GEyS+9lVCTz+FnkwiNA3p
      eVhjY6z80v9O4Zt/SvI/+onNwh0XrasFrTuF9Dxkuoh7bw79wuCReqb9EKkY4jCGt6CJNtJ9
      LPfcE9dDtCXQB9pVnpxiFXdiEf38wCc6OopIEHHi4GAdo70NL5fFq1TQY5tuFNHPfa7xd+nV
      1/YVgGN7Si+XR29JHVdxexK8eIHIs8821B0hBIGTw6T++n9B+foN3PX1xrlGWxuxL72CkUpt
      bgKhaQTPniX2hS9QvXlzz/sITUNrTyDiYWRarT9IKfHWC7j353Enl9WwvfH9YhqZL+M+WMSd
      WELWbLzVHO79ebz59U3HtkqtkWVZ1my89TzeWh53bB53alltHAHgeNt2a5G2izuzijM6r+7l
      SZV/f35d1efBotqGaGt9SlXciXoG5oMyOwuBFgsBAjZ89F0Pd3ZNPcNKrvEMXq6ElyniTi2r
      Y9lNj1BvNdd4LwDeSnZzZxipsk674wvqHVX32FnGdpFbypQVC3dsAXd8AVmPMQAwBwbwqlXs
      qal9n20/jk0ApOt+Ugl+AQhdvowIBLAmJg91vtHTg1cqH3ie1pZA1l1+5XIWmS2iDXch2hO4
      o/NIW/243loeL19GG+hAxMO4t2dAE2gnu5GlauOHk1W70VBxXLzpVXA9tOFuRNBU2xaByt2f
      q9/X9XBH5xCxEPpI96bKYjmIcADtZDdad0o19PpGE95KDm8tj9bbitbXqoRrF8/TrUhPKnVC
      V7lC3fvziIgqX5aryI1kueUa3nJWjZYnOtUmGnn1LmW+3BAg9bkCbt0bVUpkuYp2olO9v/vz
      u2+M4bib78t2caeW0Qba0frbNzsIwOjoIHjmDPk//hOk82jbLx2bCqQn4o2V2k8CLRJBi8Vw
      M5nGd1JK3PV1Ct/+M2p37+Gm00pQAWnbGG1tBxesa0jXU27Q6wX0c30IXUeYBnQmkesFRFeL
      2vShtw00AdEQIhFBa6vPR6Khzc3oHkK0xRtbDJGKIRfSO86RuRIiEVHqkxAqfflGuZGgarTh
      gNLdbRd0DQIG+qDygZFS1tOUSx7upWSxorJAex5euqDqommqd9Y1tFaVKl3rb1cCUa+r1tWC
      qLtn68NdeIsZSETYF02gdaUQpoEwDWQqhsyVN59nF2Q6j5aKIeq+SBv/AwhdJ/nX/horv/CP
      yP7mb9Hyn/9nYG6uTKsIup2u68Iw8ApFpGUdnwAYPT1U3n0PKeUn4tWnHlZuc3qyJiZY/aV/
      QnDkJImvfw2juwsRCIAQlN+8TvmNNw8ut2YjQqZ6keKh4PhwQDXOj+KBHq5DOLDjvcpiBXdm
      VQkdAllQI1CD+vn71m9jl5b5dYzzA2ovL8CrOch8Gefu3Mbd1J5eu81fTOORtjgSQRPs/Xtu
      WbUR+/gaBU+fovXn/gbpf/MbVG7eJPLiixjt7UjbxpqYoPLue5g92+dSwbNnlBHmn/zT4xOA
      yGeeofDNP8WamCA4MnJcxR4ar1jEKxYw2pV1ZWOZPPKZZ0j93N/YManTkwf71ksp8ZYz6H1t
      jQgW6biq9wco1RDBj8ZishURDiKzJWT7ls5FStz5dfST3Y1ecWOvriOVHQmp3jwSxJ1cRj/d
      iwiaiKCBloyin+7dPHm3xl+fPIvI0d6DlBJZqCI69vfrEpEgslSFvfYmEILo5z5LYOQkhW//
      GZXrN3ALBYRpEjhxgpaf+kkiL76wzQRqtLfT/j//T+R+598fnwAETp3CHBgg97u/R8ff/TuH
      9vmRx7Q1TuWttwBB4PQp9YXn4SwuEf+RHzmSRUNaDrJiqW09lzKIcBBRD4HUOpKqkfS1qQls
      uvCRmik3EImwmtSuZCERQeYriPYEwtCRuTJ4Epkt4uVKateVR7lHPIx+ohP3/rxq9KEA0nXx
      FjOIloiauxQrDfOtzJeRIRNZsfHm19DP1tOuhAJ463k0kcDLlvAyBbS+VnXMq2/EFw3iZYrg
      OIgDIsxEKob3YBFZKCMRYDlou6hMZm8vrf/lzx76ecNXrhC+cozJcYWuk/rZn6F2+zbp3/i3
      eKXtsaLSsqhssbqIQAARCm1bsAC1cFV+441t1pztBcmHPkpqo/fJ/c7vEv/Kj2yuCgqB3pqi
      Nja2y/mjFL71rZ3PEAurieliWm3w1pNqbBoHINoTaN0pZemoWOhn+xpmX60tsalrmDoitWmW
      E/Fww7YuwoHNH900EMkterOhbw73Rl3/Rqld+pk+8CTeUlbp+JpAO9GpdnNcySJiYfShLqiH
      OjbmH3W0jW2Ptj5vJIBIbMY3i3gYfbhLNVJAP90HArylDFQstM6WzTI8D28piyxX0c/2IwLK
      Kqd1pxCGpuoUDaIPd0P9HYmulHq/S1mEoaOd6t20zrXG1XNtvL/6exCGjj7UhZcuIjOFI480
      B3Gs3qBSSipvv0P61/81WjhM6NpV9LiaHNfu3EVaFr3//Jcb56d/499SfuMN4l/7GnprK/bs
      LJX33kOYJm46TfzrX9u2EJb+tV+n9MabRF98EaO/D6FpWA8eUH77HSIvPE/qZ39m28JW6bXX
      Sf+rXyP6xS8QunABN5el8s67uJksZn8f9tw8Pb/0i8f1+E2Du5hGhAJoqY8/hPG4+UjcoZ21
      NUqvvkbt3iiyUkFrSRI6d47QU09hdm8mcfJqNQp/9MdUbt5EWjZmbw+Rl14idOUypR/8ALO/
      n9DFi43zy2+/jZ5MUnnnXWrj4+C6GF1dRJ57ltDVqzuWuqWUlN+8Tul738fNZdFTKUJXrhD9
      wudxVlaojY6S+OpXj/vx/8rjrechYKDFD7D6fAp4IgJipOeBlLv6ahxL+VIqW7R++GwKPs3B
      EyEAPj6fFL47pE9T4wuAT1PjC4BPU+MLgE9T4wuAT1PjC4BPU+MLgE9T4wuAT1PjC4BPU+ML
      gE9T4wuAT1Pjb5DxhCGl3B7yIEB7BAe+3coR8MQ7A7qebES26seUimY/fAF4wljIW7w1W2h8
      7oiavDSUOHLDLdsef3Z/M0GAoQm+fDpFyHyyBeDGTIGpTJX2qMkPn/no0+w0jQBs7LGL2NkL
      SilZfn8GI2jSfqF39wI+JmxXkqu6KvBKQsnyuNbnEQ0czVV8JlMjV3XRBHhSCcDDG2Y/iThS
      YrkS2/146rqrAKzdW6S0lNv1Aj1oEmqJEO1KEEpFnvghdYPyaoHFt6dIDLbSeemhOF4JpeU8
      ZjS4+8XAzMQ4Xb39BEMqnLFWrbK8MMfgyVN7XpNeXUEiaevoolopY9VqJOrJw6SUTI3fZ3B4
      BH2X+OmBZJBoQOPuSoW5bI2znYcPPpFSMpmuIoDPDSe5PpPfmqrniWYoFSIZ1Ak/5gbgh2VX
      AajlKpSW80Ta4ztyalTTJfJzafhAkhxqp+eZITTjyZ9LS9ejVqjiVPbe1Ho/atUK3pYAfs/z
      qFX3z7bW2tHZ+LtaLlPI5xoCIIRg+PTZPa81NMFIW5jR1Qoz2RqnO8KHnguULI+1kk0yZNCT
      2Ein8uT3/gADLUEGWvbuiI6bPVUgLWAw+PkzaA9JovQkdrnG6u0FshOrhJJh2s4dkMT0CSDS
      meD0j139SIS1VCgwOTaKlJ5q2GfOEY3FWV1aRNN1gqEQE6N3sW2bbHqd9s5uuvsHGL97m5Fz
      59G03Xu71ohBW8RkuWBRtjxiwcP1ijPZKhIYag1+ksn6PhUceQ4gNEEgFqL32WGqmRLZqTVa
      z3QfW/LYjwpN1wjso+IchOd5PLh3B6OurjiOjRlQ5QXDYc5dvopuGJQKBeanpzhz8TKu66ht
      TeMJTp49TyGfY2BY5UySUmLXavt2zEIITqSCrJZsptJVLvUcbjO6qXQNAQw+Rk9qOR6WKzE0
      Qch88kf4R+WRJ8FCE4Rbo+TnMiob3CH6Gikl0pNo+u4v1KnaeI4LQmCGzScqf78mNE6cOk0o
      pNKIVCsVluZUShchBItzM+SzWTzXRR6jujHQEuS9+SJTmSoXuiMHqkGFqsNayaYjZtISNo40
      mfQ8yYP1KmNrFbIVB6+e5S8S0DjVFuZCV2RX02Sx5jK6WkYTggtdEYL7jLKelNxfrVCyXIZS
      Idqi2/d0WCvZTGeqdMcD9CX3F2BPSmazNaYzNbIVB9eTBHRBS9hgMBWiLxnY8315UjKVrj6e
      FcgqWejBnRserN5ZoLSUY/ALZ9F0DddyWLu7SHZyDc92OPmVSwTr+Wgq6RLp8WVKS3mcilXP
      QCzQDI3kUDudl/swgttf0vroIumxlX3rFu1K0PvscOOzXbaY/vNROi72khw8RE7QhxFgGCZm
      QOWlcRynkSNnamyUeCLJmUtXcB2HidG7Ry9/D+JBnfaoyXLRplBzSYb2/8kmM0r9GW4NHUn3
      txyPv5jIMZ+3MDRBZ8wkZGjUXI+Vgs2780WmM1VeOd1C5CG1OBLQKNZcpjI1CjWXzw4n9mx4
      k+tVrs8UaI8aXNllREuXbW4tqbxE+wlAvurwxnSepYKa02kCTF2Qr0nWyg7j61XaIgZfO9+6
      oy5V2+P7D7KsFO1HEwApJaWlHOWVPO0X+3ZMlF3LwSrWQKr5wvT3R7GKVcJtMUItqW3zioUb
      E3i2S2KglXBbFCNo4jkupZUC6bFlKqsFhr50Hn3LpgqhVJSWod0zoFXSRQrzWZJD2xu59CRW
      oYprPVoW4f1wHYdQJILnuiwvzOE4OyfawVCY+ZkpHNtGQkOVOgghBMOtIZaLSg262rt3Lh5P
      SibTNTQBJ1KHV38cV/LdsSwrJZuhVJDnBhOEDIGoJ9atOZLrdfv898dzfOVsCmPLSKAJwQsn
      EqyX00ymq/TEA5xqD+3oGLMVhxuzBQK64OWh5LYd449CtuLwrdEMVcejM2pytS9KdzzAhrgv
      FyzurlRYK9nIh/IB267Hd8czrJUcOqLm4QVgQ31xKhbZyTXWR5eI96doP9+zpynUqdrMvjqG
      lJKhV84Tbo/tOLf7mSEibbEdc4h4X4pgMszC9QkK8xlahjeTvkY7E0Q7d+aUtMsW6fEVIh1x
      2s8frz0/0dK6rdEahtGw6Jw4fYaZ8TE8Kens6cU01SgRjkTR6mpcKBKhrbOL+7c/pLuvn1R7
      By1t7XvuYL6VwVSo3gPXuNwT3bN3zZQdclWH7njg0GZEKSV3V8qslGz6k0E+O5zcpuYIIQiZ
      gs8OJ7A9j/mcxYP1Cmc7tptlg4bGSycSfGcsw1tzBdpjJqnw5vtyPMmb03lsV/LycIKW8KMp
      H44neX0qT9XxONUe4oXBxPb6Aj2JIN3xQGMdZCs3F0uslRy6YiZfOt2ytwB4lsPsa2PqB5IS
      13ZxqjZOxSLSkaD32SESA217Tn4922XhxiTBZITupwYxQjv37wKIduydGjs52Mrq7XmKS/lt
      ArAbdsVi/s0HmJEA/S+N7DnPeFS6evu2fTYDgcZ3wWCI0xcvbx6sDz7JVGvjKyEE3X0DdPdt
      7pzZO3jiUPcOmxr9ySAT6SqrRZuu+O7pASfTVaSEM+3hXY/vRs1VAhA2NJ4fjO/pfqBrgqf6
      YiwXMtxbqTDSFt42CgB0JwI8OxDnxmyB1yZz/NCpFqIBHdeT3JgpsFK0udQT5WTr/vlA9+PB
      WoXVkk1vIsDzDzX+rQghdghZoepwf7VC0BC8NJTA1LW9BUBognhfqtHAPcfDtRxquQrltQKr
      dxaRUjXS3SarruUQiIfoeWboUBYiKSWe46lJsLc5jdRNA++AVRzP9Vi4MYlVrDH8pfOYkY/P
      jvxxcaYjzGRaTVB3EwDb9XiwXiUW1I9kR5/P1ajYHuc6wweaWdsiJm0Rg+WiTaZs0xHbWY8z
      HWHKtscHiyVenczx5dMpbi2VGFurMNIW4qne6GMtnt5ZLiMEPN0X2yGABzGbq2G7kgtdEeL1
      Z91bAAydlqH2HesAoBp3ZmKVxbcmsYpVOi727XgoIxyg6+rAgY3fcz2KC1kyE6vUsmVcy1X7
      czVOkPuu0EopWbu7SGk5z4kvnN333E8zHTGTWFBnOlPj+UFvh/68XLCpOh6X2ne31OxFpqzm
      RK2R3Ufo3eqxXLTJVJxdBUAIweWeKCtFi6WCzWtTOWYyNVJhg+cG4o/V+GuOR77mEg1opCJH
      V6HWS+pZO2Obm2g8kiKmBwzaz/XglC1Wby2QOtmJ+VDWXqGJQzX+hesT5OcyxHqSdF7pJxAP
      bRtR5q9P7FtGaSnH2p0FOi72Eel89P1in3Q0IRhsCXJ7ucxstsbJtu1qzmRarUoPpY6mXpRt
      Nbq6nmStdPAq+cYORRV771HZ0JSK8af3Mkymaxia4OWhBIHHXIQsWWoTjmhAf/3aN+QAABsj
      SURBVCQP2Y3r41tGuscyg8b7UqyPLlHLVXYIwGHIz6bJzaTpe36Y5FD7rr3Dfiu3VqnGwluT
      xHqStJ/v/tT4JT0qp9rD3FkuM5XZLgA1x2OxYNES0o88uXTr+4ZdnykccOZ2DvKri5o6iZBO
      2fYwdXFkZ77d2BC+o6o+jevrdd46Qj6WAHj1Gj1qetHiQpZQMkzyxO6N/6B7L1yfQNN1ej4z
      9EQtmn1UtIQNUhGDxbxF1fYaK7QrRZuK7XGmI3pkH/qN88+0h0mEDt9IO2L7q0x3lsssFWxC
      hqBie7wxneeLI8nH6qRMXV3rHLDZ315s9KXOlsXBRxYAKSXZiVW1Itz2aHniVdDG3g/jud6u
      E2ApJau35qmsFznxQ+cwP6KNnZ9EhltDvDNXZD5XY6Ru7ZnKVNEEj2RdCdeFqCNmcuoI1qP9
      WC5YvL9YJBbQ+MrZVn7wIMtMtsboaoVzR/BqfZhoQEMAhZqLJ+WR1SA1Ctnka25jBXrfblOy
      2Ugb/zxJJV1k/s0H5GfTpE51oj/i8BZqiVDLVymt5BuCsHGf0kqeqe/eoZbduZVpcSHL+r1F
      uq4NEm6L7azjAYL1aWYoFUKwYfKUSv3JW3REzW267WFpq09+lwt77Nl7RKq2x+tTeaSEl4eT
      xII6nxtOogl4Z654qHnGXpi6RlvUoGJ7LBeOXs7GusRSwWq0jz1HALdqM/4nH2xf5ZXKAiRd
      D6ELWs92031t4JGHtdRIJ9nJNWb+4j4tw+0Ek2Gcik1hLoNdsWg717Pr3rbzbz5ASknmwQqZ
      B7u7RATiIQZePv1I9XqSiQa0hmtE2fZYLyn150rPo5kXu+MmuoCZbI2rNffQHqe77QbqeZLr
      M3nyNZdrvWp1FiBZtwC9OVPg1ckcXz3Xuq+/0H4MpUKslYrcWynTHTeP9MxDqRDvL5R4sFbh
      Wm+MsCl2F4BYT3JX86cAtIBOIBYi2hHf0+QY7YyjGfqBViAjZDL0yjnW7ixSWMiSn0ljhE1i
      fS20nu4iEA2im/qOiXDLcMeBHi7mQwtvuqnTeqaLYHKXIVhAy3A7mvHxBGE8DkIITrWHeGO6
      wFy2xnLRxtAE/Qc4ju1F2NQ40RpiYr3KjdkCnx9OYuh7/26uJ5nKVIkHdTq3mEGllIyuVpjK
      1OiJB7jYvd3P50xHmMWCxXSmxo2ZAi/v4y+0H6c7wtxbUZaw0dUKZzvCuwqBlBLbk5iaaByP
      BnUGW9SC4o2ZPJ87mdxdAJKDbY/mMFYn3psi3nu4eE4zEqTnM0P0oHaKeXgy23a2e8c13U8f
      bgV1K3rQoPva4K7HhBC0nX3yYxo2OJEKcWO2wN2VMjVH0hEziQYerUcVQvBMX4zlgsVstsb3
      xrM83R+jJWw0rC2elFiOZCGvGt1K0eaVUy3bylkrKYe5UH1F+WFLjRCCFwYTpMtpJtLK2/N0
      x9HnHAFd48WhBD8Yz3FjpkCu4nCxO0okoKEJFfZZsT0m1qtMpat87XwrW+X5mX71rFOZGtpk
      /smKCW4GS85xENAFfYkgM9kaACOtOx3PjkIkoPNDIy28OpljsWDxJ3fTxIM60YCOLqDieBRr
      LpYrMXXB2Y4wHVvcmKuO0vs9KXluMEFyD1NsyNR48USc745leWdOeYSmDrkAt5WeeIAvjCR5
      YzrPvdUK99cqtIQMDF1guR7FmofjSWK7zE0jAZ0vnU7x/QdZJh7XHdrn+IkElN/PfiudQgjO
      dITrwe77uw1rmqA3EcDx5L4m0raoyY+ea2Vivcp0tkq+6jYmrIYmSIT0updnmHhw+15r87ka
      saDBUGuIoQO8ULvjAZ7pj7OQt5jJ1mgJb3enjwZ0+pPBfd2+hRD0JYN8/XwbY6tqXaRkubhS
      7bSaChsMtAQZag3t+sypiMHXz7fy4WLJ3yPMZydSqqwMG/Z2XRMEdPHELjRuqGgbptGAIQ41
      v5BS+gLg09z4SrdPU+MLgE9T4wuAT1PjC4BPU+MLgE9T4wuAT1PjC4BPU+MLgE9T4wuAT1Pj
      C4BPU9McApBOg+se7ZpaDfL5j6Y+xSJUdka6PRKZzNGfzafBx+sNevsWrK6oHyydho56trdz
      56B7l1SGuSy8/RZ86Yf3L9fz4NvfhC9+CUK7xMXevQ1PPQORI8SjZjOwvARXrh3+msMyP6fq
      eWJo87t331YCZ9vq/7Z6PMaVa9DaumsxANy/p84JH0887yfJhlvafk53u0WiPQ4frwBcvKT+
      L5fh+hvwxVf2Pz/ZcnDjB9A0+NGvP379Pkme/oz6P5tVHcXLn/1k67MPrucxn8uQr1VpCUXo
      SSTRjyGW487yIiHDYKS9c89z/uj2B3zj0tXHvtcGT048QCatVINEAm59CCOnIZmEqUk4fwGk
      p75vaYWZKTWKnL8AHZ0qSc2HN+HiZdB1NSKMj8HiAhimGkk2mJuFmRmwLIjF4PJlCIZUGdkM
      3LurjmkaJJLb6yilun52RvXU8ThcugyBoGq4aytg2bC2qsq89hQEg+q6pSV4MKbqZllw+szh
      342UMDUFs9OqXmfOqueu521ldgZWltXn8xchVY/Gm52B2VlwbPUsFy9BIKCuyaTh3j2wLXWs
      owP6B1T9JifUKKXrcPYcbEniW7Jq/Nn9O/QlUrRGosznsiwX8zzTf/QovSeBJ0cALEs1krlZ
      uPY0RKNQLKhGCSpFxewshMLw3AtQq8KN6/DKl9XBdFoJCTrc+gA0HT77efXdX/755n0ME556
      WqkgM9Pw3rvwwktK+N59B559DuIJmJ6C3C4bBZqmUqdCIdVQbt6Ezzyr6j8+Dk8/A+fOw9h9
      mJqAs+dV4xwbhWefVwLx4c2jvZvJCUivw4svg+vAG6+pd5RqVR2BrqljxaI69sqXVT0DAXjm
      MxAMqLrd+kCNNIU8vPM2vPAixOLqPayvKQEYH4NSEV76rHqm119V7zuRQErJ9elJnhsYpjep
      QiJH2jeTFmfKJUCQqquaU+l1BlpSaEKwUiwwn8uiCcGp9g5iQaWq2q7LxPoqRatGoVploJ5x
      2/U8ptLr5KoVhtvaSYV3qq9V22Z8bQVXeoy0dRINqP3QJtZXOdmm6lWoVqk6Nh2xOLPZDBEz
      wEx2nYgZYKS98wmbBGczqpFE99gKKB6HU6fUjxuOqP8fxnVhZQUuXFQ9mGGqHnqDri71fyGv
      RptySX2enlK9XSKpertweMe+BwgBXd2b1yeTUCptHh8YhM4u1Uu3toJTn5yOjamGFw6rY6Ej
      6OsbPfyly+p5Q2G4eEUJBYBhQG+/etZkEvr6N0eDrm7VARQK6li5PvGemIDLV5Sgbzzrxr3m
      59RIYRhqznThohqFAcfzKFk1uuNKGHKVCplyiVJNhWYuFwusFDcNB3eXF3E9D09KJtZXaY/G
      iAWDfGv0Dpbj4Hgu3xq9TcW26Y4nqLlOvRqS16cekKmUaY/GuDk/i+ttzw9VtW2+NXobU9eJ
      BoJ8+/4divV63FpcaJyXqZSZy6lOdHRliQ8X52iPxshWK/xgfPQJGgFA9UCH3DhiT1wHzMDu
      efc9D95/FypVCIfUBrob+faqFYj27bzm4evffQesmhoBXA+8Q1hgbGv3yflh8TwlyBuEw8pK
      tRuhkFLPPE8ZEBwHQkH1/4a1yKqqDuRhNmKj9C2/QSSiRltUwzS0zXDI+6vLFGpVSpbFj1+8
      smf1dU3jucFhspUyIWkSCQQoWjWKtRqdsThXe/sRQpCtVACo2BZl2+Kzw6cQ9UD3TLlEe2wz
      9+tUZp1T7Z2c7VQdUkDXGV1d4jMDQ3vWQxOCZwZOEA+G6E+m+JO7Hz5hAnAcGKZqoFLuFIJy
      CapVeOlldcxx4C9+oI6FI6qnTO1jcSkWVeN6sX59rQZvvn5wnQJBde+H5xSHQQilypSKyigg
      pVJXkruUJaWyXF26rNRH14UXX1JllMvK0gTQ2g4Lc6oMKZWqs3Ev3VDnxuPq2Oqqui+qIdue
      i+N5mLrOs4NDlC2L743f2/cRirUqf3b/Lu3RGIamka9WkFJSqFVJhXfmM7Jcl/lshj+6rVRF
      2/N44cTJbeeULYuO6GZGwlgwxFR6/ShvlqBu/BUUAE1TI8mbr8PwSaU7r62pY4GgUllmZ1QP
      ubi42SsODcNrf6k+axpMPNhpfgwGVMOaq08sl5YOZ4M/dw7efEOpE7UaTIzDhUuHf6bzF1Rv
      fvqMEtqJB2p+A+rz9JRqzPPzSkVKtqhOIJ9TKo1lKYPA1md983U1NzJNdTxZV/3OnYe3rqt7
      1Wqq7M9/EVAC0BNPcmtpnmu9uydE29iN3vG8hkoznUlzvquHc53deFJStNTolQpHuL+2wqn6
      PMJ2XUKGQdgM0J1I8pWzF9E1DWeXd9wZizOxvkp/fc4wlV6nK56o18FrmFTL9u4Z7yq2TdGq
      fUIxwY6j9NStu66Uy+qFp7bkE7ItNbnt6q5bUhahu2fT+rG0CD296u/FBXVM09TnlRU1p+jo
      VEN4R6dSr0qlTTt8d49al+jrV9dUq+qYaarGb1nKArKBlOr6hXmlhnR2wfo69PSoa6uVzRGk
      UlH/WlvVdcUCLCyonjUUUmpafJd07rWastB092y/b6WyaZkZGNyc/+SyUCxBMa/u3d6x+Q6K
      RVich3BUWXmymc1ypVT30jT1DGsrcPmq+r5c3nwPAwPb1C/Hc3l96gHpcpmgbmB7LoMtrVzr
      GyBbKfPt0TskQiFAkC4X+U+uPEPVcfjW6C1igRBCQMmy+OLIGVKRKK9OjLFeLhE2AxRrVZ7q
      G+BkWwf3V5frZlETT0q+eOoM0UCQP7x1k29cuoonJTdmJlkpFBACYsEgnzt5BkPT+P74KIVa
      lYCuY7su/S0pnuob5Dv371KxLQxNp2JbvDQ04gfFNyW5nBLWjk4l5DfeVNaqDQPBAUgpcTzV
      y2qahi42N9RzpcSTHoam40kPXSg7iyclrudh6BpSKn184xrbcxGI+ndqS9pGWZ6HrmmNdQbH
      dTF0fVs9AAxNa4xIKquFi6apZFlSSnRN43tj93i6f5CIGWiU+VdPBfI5mFBQrSncu6tGlJHT
      0Ln34tPDCCEw9V1SZwqBIQQbHjaa2DxHF2JzsUxsvyag72yGjbIeWmAzttx3v3oEthpTtqhq
      uqZtO+aPAD5Nw1qpSEsovF2IfAHwaWaerIUwH5+PGV8AfJoaXwB8mpqPXwAKBWWzf1xyWWVX
      fwwyU/fJze3chrW0tszKvZt4jvNY5W9QzaUprS4eeF4lu05pfflY7ulzOA5nBv3Otzd9dKRU
      CyTXnlKehEelXFaLVD27BMAchWJRrfD2Pno5pbUlNNMk3j2AVl/skVKSX5jGsap4nsNRLcW1
      Qpbi6iJtJ883vhO6gWYebGvQdGPX1VWfj47D/bquq4JXDGPT3+Tm+8pl9tP8gwlBtK2bcnqF
      WKdalXaqZfSACWx6H0rpUc1lcK0agWicQCQGQuBYVaTnYQRDVDJrGMEw5fUVqrkMxZUFNN0g
      3NqBbgbQ6qY317ZwbQtNN6jmM5jhKMFoHIRANwPILZs/SelRzabxHJtgvAWh62iGiVXME4jG
      EZpaMKoVsgTjSUR9AamaU9eEW9rR6h1XfnGG7PQYRiisnNqCYTrOXm3Uq1k5+kKYEMqpa0M9
      2AigWFxQf/f0wqnT6rzVVeWdGY/Dhx+qEEBNU34qN99XQSTd3crvRNOUoI2PKTcJKWHwhLpm
      Q8i2BnFomnLnhbrrw7K6FtT9O7s2HdZu31Luy7GYCibZuA6ItnezPnGnIQCltSWi7T3kF6Yb
      52RnJ/BsCyMUJj0xR6S9m0TPILVcBqtcpJpLE0ykiLYFcB0b6bm49uZOhJXsGm6tRsvgCHa5
      yNKtt4i0dhKMt5CdHad95BKhZIpyZhXpuST7hnFtm6VbNwglUhjBMJmZt0mdOEWkrZvM9Bgd
      Z6+ga2qPrvTEXbovPQe6YOXuuxiBEHogSGZ6jO5Lz2IEQyA9koOnSPaeQEpJcWWe7Ow4rUNn
      j9wE/ipxeAFwXUCqZfS7d+D0WdXAXFeNDM+/qBrl228pgTg5ojwYM2kYL6m41XhcqT/pdRWE
      Eo3Bhx+oAJEr11RZ4bDytpRSOWyZpvLVWV2BD26q4IxoFO6PbroEL8zDg3F1TKAcz1xXCeM7
      bykheupp5QtjbXeO0uuxAq5VQzMDVPMZEj2D2wSgZWAE6luvRtq6WB+/TaJH7TeWX5ii99pL
      mGEVwyA9WW/EQ3u+ynjPIK3D5xBCoAeC1Io5Qsnte6rlF6ZI9AwS61Kuwp5jH7g7ezW7hhGK
      0Dp8DoBANE5+YarxeQMhBKFkK5W0Erjlu+/h1j1ojXCUzrNXEZrGwvuv0zJ4mvTkPVoGTmIE
      w6w/uIPQNFzbJjV0mmh7D1J6rI1+gFUuohkGnuPQc/k5pJSsP7hD14WnAcjOPsCMxIi0drI+
      fotaIQ8ChNDovvQsVqlAbn6CzvNPI4Sgms9QWJql4/Tlj0zTOJwAOA5cf7Peo1ahpQVS9U3S
      DEP11LatzjtxQnlLnhxRx1dX4Ye+tD14pbu34WLL5Svwg++p0SMQUI5etr05AmTSSgBGR1Xk
      1YYDWTyuBEBK1fg3orRABdVcf0MJgKYpBzbLgpbUri8y0tZFOb1CKNGKEQihbVma35gTFFfm
      0XQDKT3kluCMZP/JRuM/PAfvtmKVC8Q6+440J7BKRYor89TyKgDEc12lrm08i+vg2haeY5Oe
      uEesqw+ERtf5p9X+bFKycu99rFKBYDyJXa1QXl+m76mXlbrlefQ+9XJDIBc/fEuNlnOTBKIJ
      Os8/BcDy7bcPrGvbyMXGnnCZ6THK68tEO3txJ5WKqJsBisvzxLv6P1I1+3ACYBjKh35jIpzN
      KoH4/BdVY33rhmqIhq4a5daIrqHh3SO3NtD1Te/FSlmVpWnq+3J500fFtiCyR0NzXRVquEEo
      qNyVhVCRWONjajSREi5dgfb2bZdHWjtZG7uFa9tE2ru2vXDpuRRX5um99hJCCFzbYnV0M6RR
      iO2GtIO2hj0smqbj2jXM3QJX9kA3AyR6TtAyeGpTcLYMG/nFGar5DJpukOg9QTjVrvzyl2Yp
      rS0hPZdaMU+8PrrppknbqYuNslzbIjszhlUqAhK3pgJYqvkMHWePFqheXl+msDyH59g41QrJ
      gRGEECR6BykszZLsHcKulAjGWw4u7DF4NGe4eFw1fNdV6k5Pj+rxhVDuyxPjhy+rXFbXaZrq
      5UdOqR4f1LxibVX9bZrKJXg3YdoIGAnUXZELBeUXv2GxunARuKjSjbz3jhLcLY1cM0yEplFJ
      r5Do3b6VqhCq56vm0iBl40fbCz0YopbPUs1nEJpGIJrY89z9iHX1sz5+m7aRC3iuS3F1kVRU
      jX5GIEhxZYFQooXi6mK9QUK4tZPM+69jhiMEogmquTSabqieHjVaJXu3B69Xc+tUc2m6LjyN
      ZpikJ0c338tDVqn0xF2inb20nbqEEIKFm2+od6RpeI6NbgY4DE61TH5xms5zT6GZAUqri7h1
      v/1IWxfLt9/GDEUIJVs/8p1DDycAUqpeX9dVo5+eVH77hqEmltNT6nMup9Sfg2Je0+sqqsmy
      Vc6e8xfrk9qYCuoIR5TqMzO92VufOq0CNS5fUbG2o/c2sxWcPa9CFS9eAoQK/n7qGXXdB+8r
      lS2RVAEwWyKpEj2DUHfLTfSewC6XGupPrLMPTVMNoPPcNfKLM+imSWrwNNWCyjJhRmLowe2h
      jroZpP30JYrL8wSiMQLRBIFoAi+kjAZGMEw4tbkHcyAaw6sHfARjicbEOZRspW3kAsWVBYxw
      hEhKvQchBKnhc+TmJiiuLBDt6MEMRxGaQNMMeq4+T2Fxhko2TSjRQqRtfy9Poem4toVVLlIr
      5CiuzBNOte95rlMtU82nKa8t49RDJePdA6yO3qR1+JwyCtTfj9B07LqRwCoXyS/O0DZyASE0
      PNfFrpSwM6vkF6YbRghN0wkl21h/cJveay/tW/fj4HDOcGP3N4PHhaYaZVe3Eggp1SR0bU0F
      f6RalcWlp1ctVrkutG7ZdLtcVpPR9Loqq39ABacLoeYBszPqurYOJRDVqrLobKTymJtTcaqp
      VjXn6OraDP6YqU9cB08owQSlks3NqnlAS4u636fQ9JeZuo8ZjRPreLQNvWsFleEiGN8eSiml
      pLy+TDWXVj2urhMIxzBCYQrLc0oHr+PaNoXFGTzPIdbRS62YJ9ap1mGquXXK6ysEEymKS7N0
      nL2KHghSya5TXl8mGE+im0GMYBgjHKGWz1BaWyIQjWNG4gghGnWzykXW7n9Iz9UXPvJ1Ed8b
      9FNCYWkWIxQh3NJ28MkfM1apgNA0jFAEu1Rg7cFtei4/f2T1ZaMppidHCcYSDeH6KPEDYj4l
      xLsHPukq7ImUkuzUfZxaBd0MbLPwHJW1+x+gmQGi7d3HXMvd8UcAn6ZFSul7g/o0N74A+DQt
      QghfAHyaG38S3IQUl3JYxSp6wMSzHeL9KYzgPqv1f4XxBaAJcao24bYY4VQUu1wjO7FG27lu
      3JqDa7sYQQPdNPA8D+lJPLu+iBdWK72u5eBa6jzN1JUDoOvh2i6arqGZOk7ZQg+Z6PXjdtkC
      JGYkeGzuIseBrwI1OZqp47kenuNRzZSRjsv6/SWcmk01U2L19jx22aa4mKOaLiHr53mOy/ro
      Em7VppYrs3p7AbfmkB5bpjCfwbVd1u8tIj1JLV/BqVrYZYv10SWeJMOjLwBNSi1bobxWID+T
      Jt7Xgm7ohFrCSE+imwZWUbk5RNpiRNpjhNti2BUbzdQJtUTUeUGDWkGdF26NEm6NYkYDhFoi
      hFujaoVeSoLJMJqpIzQNu2LBk9P+fQFoVoyQgRkJkjzRRjgVpbxeoDCfxQiZGKG95wOV9SL5
      uYw6L3w457f1e0tIx8OMBNCMJ6vJPVm18fnY0ENmvUEqvyin6mDGgmiG3ujVd8Op2gSiAXRT
      x8pXDnUvp2YTTIbV3KF2PIkGjgt/JbgJsYo1dFNHD24J/PEk5dUCUkoCsVCjp5auhxkN4loO
      nuNihAOUV+rnxUNougYCPMcjEA1SK1QxQmoSXc2UCLZEcC2H8mqBQDwEEoLJ8BMT/O8LgE9T
      46tAPk2NLwA+TY0vAD5NjS8APk2NLwA+TY0vAD5NjS8APk2NLwA+TY0vAD5NjS8APk2NLwA+
      TY0vAD5NjS8APk2NLwA+TY0vAD5NjS8APk2NLwA+TY0vAD5NjS8APk2NLwA+TY0vAD5NjS8A
      Pk2NLwA+TY0vAD5NjS8APk2NLwA+TY0vAD5NjS8APk3N/w+oZF1toXpfLAAAAABJRU5ErkJg
      gg==
    </thumbnail>
    <thumbnail height='192' name='Discrete Monthly chart regiion wise by number of orders wordcloud' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Indian states word cloud ' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Monthly profit by region ' width='192'>
      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
      J5x8AAozAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Monthly profit by sub category ' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29d3hcV53//5qukUbSqPdeLBe59zhusdMJSSAJIZRAgIS2hf0Cy7K0H21Z
      lqXtEkIIkLaBdCeOE8e9V1mSZTVLVu8jaTTS9Ln3nt8fsoUdFUuymq37ep48Vmbu3HPuufd9
      zrmnfN4aIYRARWWWop3uDKioTCdTLgCv1zvVSaqoDMuUC8Dj8Ux1kioqw6J2gVRmNaoAVGY1
      qgBUZjWqAFRmNaoAVGY1+kt/eL3eKRmhcTqdk56GispoGRBAUFAQQUFBU5JoRETElKSjMnUE
      JJkmWy8ZCdfXvVW7QCoTwvunavi3P+zFH5CnOytjQhWAyjXjC0hsP3aesBATxRfapjs7Y0J/
      9UMmFkVRCAQCU52syiRyuLiB+IgQls9J4HRFC4uzYqc7S6NmygWg1WoxGAxTney4kGUFnU5t
      JEdCkhXeO1XDo3csIiEylLef3oNAi9Ggm+6sjQr17g6BLyCx7XAF//TbnVQ0dE53dmY0xdXt
      GPRa8lKjsYYGEWMN4Xxj13Rna9SoArgMRREUVLbyb3/YS3l9J5uXZfDse8UEpOvrxW4iCEgy
      24+dp9PhHvYYRQjePFzB3Wty0Wm1aDUaVs1L4lhZ0xTm9NpQBXCRls4+fvXqcZ7bWczHblnA
      Nz5+E/eszSXIqGdfYd10Z29KUYTgmXcKeetwJT967iBOj3/I4yrqO3F6/Cyfkzjw2aq5SZw5
      33rdVBqzXgCKInjvRDXfeWYfGfFW/utLW1mRl4hWo0Gn0/LoHYt541AFXSPUhDcSiiJ4ZV8p
      TbZefvmV21g1N4mfvXgYr18adNy2I5XctTrniv5+VFgwkaFmqpq6pzrrY6bX5VMFcPZCO++e
      qOZnT2zhvvVzMeivfHlLiwtn9bwkXtlfxkTuHhVCICvKhJ1vIhBC8NaRSk5VtPD1h9cSYjby
      0OYFRFtD+NUrx6/Ib2OHg/ZuJ+vyU684h1arYWFWLMdLZ3Y3yOeX+K+/Hp3dAuhz+3h2ZzGf
      um0h0eHBwx730Q3zOFfbQVmdbULSFULwt72l/OtTe/ivvx7l+Z1n2VNQS1mdje5ez7RMJgkh
      OHS2gf1FdXz9Y2sJD+lfFaDVavjyfSvQajU89VYBsqIghGD7sSpuXphGkGnwQOKKvCTOVE1e
      N0gIgc8v0drVR0VDJ5I0torEH5D5xcvHSIoJm/ph0JmCEIJXD5STkxzJkpyEEY8NMRt5ZOtC
      nn//LD/47EZMhmsrtuOlTRw518hX719Jp8NNe7eT8nob+4vq6OxxEWQ0kJ8Vy9KcBLKTIrEE
      G68pvashRP/L//Pvn+W7n95AXKTliu/1Oi1fuW8lP3ruIK/uL2P9ojRKatp5+JYFQ54vJTYM
      o15HTYudOanRE5JHjy9ATWsPlQ2dlNXZsPW4UYRAq9GQHm/li/cuJ8h49fsiyQp/ea8IrUbD
      o3csQjPVUSHsdvuMWAtUWtvBk9tO86PPbcZqufoaKEUR/PiFQyzPTeCO1TnjTrels48f/GU/
      33j4JrKSIgd9H5Bk2rtdnKlq5XhpEw6Xj/QEK2vmJbNqXtKgLtp4EULg8Ul093moa+3hhV1n
      +ecHVo/4wDqcXn7wlwPIisLS3EQ+ffuiYY/9v90lyLLCJ28b/pjR0tDu4FevHMdiNpKbEkVW
      YgRZSZFEhZvxB2Se3HYaRRF88d4VhAQNP8ckhOClPecoq7Px7U+ux2zSDy0AV18vpmAL+kmY
      BJoJAvD4Anz76b08tHk+q+Ylj/p3TbZefvCXA/zs8S1EhpnHle5PXzjMyrlJ3LUmB41GM+Lx
      ihA4nF5Ka23sLazFZNDz5ftWYDGP3CI4XF4On21EkhUMei1arQaTQY9GAy5PgNpWO822Phwu
      Lwa9jvhICx/dOJec5KirXkNbt5M/7yji83cvJdo6fLexurmb37x2gl986dZrEm1JTQe/33aa
      j2yYy8Yl6WiHKLOAJPOnHYU0dvTyjYdvIizENOiYJlsv2w5X0NzZxzcevmmg0htCAIJzp44Q
      mraQuGCFjl4/4SbwCgOagAtjaBT+3k70lkgCfV0YQ6OR3d1ozBGY9TIelwcfBkzCg8ZsRXh6
      UIxhxESEAtMvgEu1gM3u4qsfXTVkgY7Ei7vO0tjRy+c/tJSosOEfgKHSfXF3CW1dTv7pgdVj
      rlz8AZln3yvmQks3//LQGmKsIUOmUdnQxR+2F5AaG05UWDCSLCMrAl9AQggIDjKQGhtOalw4
      sdYQgs0GjBPUqlxOQJL5+pO7+OcHVpMWbx3z74UQnCxv5i/vFvHY3UtZlpswYoUhyQov7TlH
      Y4eDf31k3cB9be928taR8xRVt7FhcRp3r8kl+LJWYpAAJHcXB06cw2QOJyJEQ3JaJvW1F0hO
      iuHk8WIikpLA5SAyJYOuumqiUxLp69MBbnSyj7T0dBpb22lqbCY0KoEgyY45NpN5WSnA1AhA
      VhQ0aNBqBxdYdXM3P3/pCP/5xFbCR9H1+SD+gMz/7S7hYHE9i7LjuG1FNnlpV+/nFlW38cft
      Z/jhY5uICB176wH91/X2kfPsLqjhaw+uITPx7+UYkGReP1jB3sJaPn3bItbMT75qCzPZPP/+
      WYJNej6yYd6g77p6PbR29pGdHDmo7y6EYE9BLa8eKONfHlozqpYJ+rupL+0pwdbj5qHNC9h+
      tJLCqjY2LUnntpXZQ7YMgwTg6GzFr7PgdnQhZC9OyYhR6kVjttLX1U5YTCKysxtCrIi+brSh
      UXi62tCFRhNjDSEuMpTGDgddbU2YI+LR+brx6cOZn5MOTIwAPL4AXb0e2rud2BxuuhweOnpc
      2Hs9dDrcOFw+9DotuSmRZCZGMjc1mvQEK6HBRr7x5G7uW583aPhuLAghcPsCHCiqZ++ZWmRF
      cM9Nudy0IHXINTDdvR6+9+f9fOFDS8nPjLuWS0cIwbHSJv68o4gn7l3OstwEWrucPPXWaXQ6
      LV++d8W4umeTwfnGLv78bhE/emzTwJqqXpePt49Wsr+wnoRoCw3tDlJjw1mam8DinHjS4sJ5
      eV8pR8818s2PryMxOnRMafr8Er9+7QRldTZuW5nNHauyR3zHm/KX4Pb2diwWy5DfjZSV3QW1
      7C+qp9vpR1YgxhrcL7iIEKLCzESFB2MNMRJhMRFq1uOXFBpsLqpb7Fxo6qaquRtZllmQGceX
      71l8zddxqXZVFEFVSy+7CmopudCO1WIkzhpEUnQoKbHhJEWH8tLeUuZnJnD3qoxxp/NBatsc
      /OaNAvLTIjhZ2cGDm+azYWHimLt0V0vnEuN5TGRF8O1nDvKP9y8jxhrMweJ6th2rYUlOAh9e
      m0WEJQiPP0B9h4vC6nbO1XRg73OTEmvlq/ctxRI09tE2g8FAIBBAUgT6IXoAH+S6GQWy93mw
      9biJiwgZV9dFUQQdPS5iwoMnbYWnX5Jp63bS0O6g2dZLQ3svjR0OUuPC+YePrprwvnZ7t5Nt
      hyvZsjzziu7QTOLZ94rosLto7OglOjyYz961hOSYsGGP73S4CQ8xTdho19W4bgSgcn3S0O7g
      mR2FfPimOSzJiZ/295IPogpAZVYzq5dCqKioAlCZ1agCUJnVqAJQmdWoAlCZ1agCUJnVqAJQ
      mdWoAlCZ1agCUJnVqKERVWY1U+4P4Ha70WrVhkdlZqD6A6jMatSqWGVWowpAZVajCkBlVqMK
      QGVWM2sjw6lcX5yr7aC1s485qdHEWIMxmybGZEUVgMqMx+X18z+vnyQnOYodJ6rx+iUSIi3k
      pESxODueOSlRQ4bAGQ3qRJjKjOdwcT1ZiRH8w/3LEaI/QEJ9Ry8Xmu08+eYpPrwul/ULxxfm
      RvUIGwP2Pg97Cmopr7exMCuO5XlJJEZZZtxG7xuJgCTz/ulaHr1j0cBzExdlIC4qjJVzk1k1
      L5mfv3SUOakxI0abGA61CzQK2u1Odp+u5UBxHQsyYtm6PIuC863sKzyCUa9j9fxkVuQlkhQT
      Nu64PCpDc67Whl6vZW5azJDfZyZGcNeaHP7wdgH//qn1Yw49M6uiQvglGUlSrogNORyyrHCh
      xc57J6opb+hk7YIUbl2eSWxEyECN7w/I1Lb1cLy0kcKqNkKDTXz2zsXXnVv6TEUIwX++dJRV
      c5PYuCR92ONkReEXfz1GYnQoj2zNH1OLPGsEUFjVxp92FOJweUmMCmVuWjR5qdFkJkYSYw3G
      55eoabVTWmujqqmLquZuwoJNbFiczpZlGVjMxhELNiDJHDrbwEt7znHvujzuXJ2tdo2ukSZb
      Lz994TD/+cQWQq4SEbvH6eXbT+/li/cuZ0HG6H2Kb2gBCCFwewM8t7OYisYuPn/3UrKTIqlv
      d1BeZ6Os3kZdaw9+SUaWBekJVjITIliQGUNOUhShIUZ0Y1y412F38bs3T6HRaPjSvcuHjOI8
      XF79AZkLLXacHj8mgw6L2UiQUY/ZZMBk0OHyBrD3ebA7vTicXhwuH25vgIQoC5mJkaTHh6PX
      aW8I4YmLRn3hISYe2DR/VL8pqmrj9UPl/OAzG0ddBkMKQJZltNrBBSmEQAhxTas5p0oAiiI4
      VdHCMzvOsGZ+Cg9tmj9k10cRgj63j2CTYcLC8V2K4vzW0Uo+fks+m5akD5Tl5cXtk2TON3ZR
      VmvjXF0HbV1OEqIshAab8Pll3L4AXr+ExxfAF5AJMRsIDwkiKsyM1RJEWIiJIKOedruLqqYu
      Wjr7iIuwkB5vJTcliuTYMFJjwwg2GYYNB6kIgVAEshBIkkKf20eP00uP04vHL7EyL2lUXcYP
      IoRAkhU67C46HR4yEqwEBxlGHRbe4fTy9Sd38dMv3ELUCPZVH+TZ94pJiw9n4+L0YfMlKwJF
      ETg9/qH9AYqPHyQqdxlxFgMBWWAy6PH5/eiFjzqbk6jQUCwhRtAa0GkEvoBMcJARj9eH0WjE
      H5AwGfV4fQGCzUFXCGkqBODy+PnjO2eoaenh8XuWMS996BeoyaaurYcn3zyNPyBjNOiuMMZT
      RP9NTokNZ2FWHPPSo8lIiBiVzc9wBCSZZlsftW12qpvs1LXZabL1EREaRGpsOOkJVoJNBhyu
      /tbD3uel1+XD7Qvg8vjxSzIhQUbCLSasliCE6I8/+s8PriY5Juyqtapfkul2eCivt1FY3UZt
      Sw8CQWxECA1tDoKDDKTFW5mXFk1WUiTp8dYho2kLIdh2uJLGDgdf/ciqMZVB80UTk0seAbYe
      FzaHm06Hm+5eD129HvrcPlyeAAIxWACKr5ei8lo02iBMuAh4PCjmCHQ6CaM+CK1Jj+SG3vYK
      2v0WMuPMePtkguPD0AoTrs5Gqpq6yc9NodEusWX9agy6vxfceKNDjxaNRkNNi50T5c18+KY5
      Q9ZeE5XO1bhUC7Z09iErAo0GDLr+G67VgtVixjyEydxY0rnatQSk/vQbOhw0dDjw+SXCgk2E
      W4KwXvzPYjZgMZuwBBuvGMUSQrC/qJ5tR2t4ZOsClmVHD5kflzfAsbJW9hU1IEkyabEh5KVG
      MT8jllhrMBqNBiEEzZ191Lb2UNnYRYPNiSI0fHLLfOakRFzRQkqywvf+coTP3bWQjPjwEa/v
      gxgMBnaeqOKt4zWEmPREhpqIsJiICjMTHR5MdLiZcEsQocEmQoIMgwVgb2+gxe7D7/OikVz4
      AhrCQ0NweDwkxCUgawWyJ0CPrR2/1kRSUgzhaOjCj6PLhVkncEsaEmPCKKusZ826mwg2/l3l
      amzQ64/6th5+9eoJFmfH8fCW/IGhRpfXz6HiBt4+ep7kmDA+smEuWYkRo4q+LYSguLqdP7xd
      wM2L0rjv5ryB1u94aRPvnqjme5/ZMK5h5f6uOqOaHR7xJdhut2ONiMBpt2OOiJiQSQNVANcn
      To+f/33jFG5vgC/cs4zaFjuvHywnNiKE+27OIzclalwv310ON396t4hep48v3ruchCgL//7H
      vdx381yW5yVe/QTXyA09CqQysUiywvaj53n3RDWpsWHct34ueanR416HcwlZVnj/1AXeOFTB
      zQtTOVHezK//4fYxj8CNB1UAKmNCCIHLGyDIqJ9wF9GGdgd/eLuAzUsz2Lx07G4640EVgMqM
      QlYUtBrNlM1lqGuBVGYUU9HtuRx1R5jKrGbKW4BLs8kqKjOBaRGALMtTnayKypBMy4YYvV59
      9VCZGajvACqzGlUAKrMaVQAqsxpVACqzGlUAKrOaKfcHcDqdk56GispoUf0BVGY1ahdIZVaj
      CkBlVqMKQGVWowpAZVajCkBlVjMt4dElSZrqZCeUHqcXq2VqRsymM83ZwLSsBtXpJiYC23Rw
      9Fwjv3vzNM988x5MQwR1mgzsfR6+9r+7+LdPrGNOavSUpDlbmJZ1yddr7EpZUXjzUAXhISaO
      lDRwy7LMSU9TCMGhs40oQrDzVA1zUocOTqUyPtR3gDFQWmsDjYbPf2gpu0/XTMnONlkRHCiq
      4yv3raSyoZNel2/S05xNqAIYJUII3jlWxV2rc1icHU93n5fa1p5JT/dCczdarYYVeYlkJ0Vy
      vKxp0tOcKIQQdPW6ae7snbHbYFUBjJKa1h5aOvtYOTcJjUbDlmUZHCyun9Q0hRC8e6KajYvT
      0em03Loii0NnG5BlZVLTvVaEENh6XDy/8yzffnov331mP28cqpjwfDtcXo6UNODxjd9zThXA
      KBBCsON4FZuXpg8E292wOJ1DZxvw+iZvRMvp8VNaa2P94jQAclIi6XP7qGub/JZnPFz+4H/n
      mX14AxLff3Qj//H4LZyuaOFXr57A7b12g0RFEZwsb+a7z+zn9YPl/Pa1k/j847sPqgBGQafD
      TWVDJ5sve+mNtgaTkWClsLpt0tI9fLaB+RkxhAWbADAZ9Ny8KI0Dk9zyjAdZVnhpzzn+/Y/9
      D/73Ht3AFz60jPgoCzHWEL776AaCgwx878/7abb1jjsdW4+Ln//1KK8dKOczdy7mx5+/BQH8
      5b3icbUwQ0aGKy04TkzOImLDzAgh6LbbiYqMHHemL6erq4vw8LGFvJ5u/m93KZIi86lbF17x
      +YmyZt4/Xct3PrVuwtMUAr7x1B4+d9di5qREDXze1u3kxy8c4WeP30LwVUKrTyUnylvYcbyK
      L354OfGRQ7viCAG7Ttfw5uFKnvjwMhZmjt7KSFb6R8P+tvccW5ZlcPfa3IFhaI9P4mcvHSE3
      OZqHb5nPUINkHp/EG4crMei0fHTD3IFjBpWgkNzoQyPpbmunu66TACaaW9tYu34jYeZrtzfV
      aDTX5DAz1fS6fBwtbeQ7n1o/KN9L5yTy0t5S2u1uEqKG9jwYL9XN3QghyEuL4fL7mRgdRnJ0
      KCU1HayZnzyhaV4LO09e4O61uSRGh4543O2rskmNt/Lkm6dYkpPA8jkJZCVFEjKEj4MkK1Q0
      dFJc3U5RdRsWs5HvfHoDyTFXphFiNvIvD63lJ88fItoazO0rs674vqSmg2feKSQ7OZIep5fn
      3j/LZ+5YDAwhALutHVunHVlAUnwMczLTcffZmaiR5+tNAIdKGpmbFk1idOig8XezScvyOYns
      L6rjka0LhznD+Hj/VA0bl6QPGSpw09IMdp2uYc2ClBlhy9rpcNPc2cfSnIRR3dsFGbH88LHN
      7CusY9uR89S02EmM7jcuzM+Mo8/t42R5M5UNXUSHm1mYHc9X7l9Jalz4sKETI0LNfOuTN/Pz
      l46yMDOO5Ngwevq8PLuzmAvN3Xz2ziUszI7D55f4jxeP8Ox7xXzmziWDu0BDDVcJIdBMUMDS
      mRQct/+lzc3J8mZirMEsyo7HZNANXKfXL/GvT+3mqx9ZRVbi0Hlu6ezjpy8e5udf3HpN9kaX
      4/T4+affvMcvv3oboRf7/5fjD8j842/e47uPrichauQadyrYfvQ8bd1OHrtryZifkUueXecb
      uyirs1HZ0EmI2cjCrDiW5iYQHmIa0znL6mz8z+snuX/9XF7ZX8a6/BQe2DT/invj9Uv85PlD
      ZCREzL7o0IGLxnRNtl7O1dpQFEFkmBm3N4AsFHQazUCT3NXr4UKLnX95aM2wNa2sKPznS0e5
      OT+VdQtTR5UHIQQdPW6Mei3hIUGD4utvO1xBa5eTx+9ZNuzNf3lfKX1uH5+9c+wP3dXy5gvI
      lNS009PnZWluwogmdX5J5l9/v5uv3L+SzGEqialmX2EtZXU2bluZTXbS0O+uXr/E028XzI7o
      0IrSPzx35Fwj+wvrCAkysHlZBl/40NJBNazbG6Couo2CylYaOxx8bYSHH/qjGd+9Jpfndxaz
      en7yiDHzZUWhtrWHHceqKG/oxOeXyEqKZP2iNBZnxxEabMLrl9hxvJrvfHr9iA/2bSuy+Kff
      7uRjmxcM8tCVZAV/QMZs0o9aHEIIWrucHCiu52BxPUnRoUSEmimqbu+vAIYxwSi+2DdPj7eO
      Kp2pYNOSDDYtGdlfIMio5yv3r7yxBeDxBSiubmfPmVqabL0sn5PAV+5fSe5loyofJDjIwNoF
      KaxdkDLqdHJTopBkhYZ2x5C1oKwoVDR08fqBctrtTu5cncNjd/fX3CUX2tlXWMfzO4vJz4wl
      ITqUxOhQEq/StQm3BJGfGcvhkkZuXZGJ2xegod1BQWUrRdVtOD1+cpIj2bQkg/zM2CEtYIUQ
      9Di91LT0sKeghtq2HtbMT+Zbj6wjNS4cl9fPN3+/mwst3eQkDy4zIQQHi+vZvDTjml1ipgON
      RnN9dYEu9RclWUGSFQKSgqxc+lvGF5Dx+SW8folztTYKq1qJCDWzZVkGS3ISxuV3O1reOFjO
      udoO8lKjEfS7MyqKQCCoabHjcHq5c3UONy1MJdh0ZT6EEHQ63JyubOV4aRMf2TCXhVlxV02z
      pKadp94qIDMxgurmbkLNJpbnJZKfEUtMRDAlFzrYeeoCXr/E5qUZbFychkGvo66th3M1HRRV
      t2Hv8xIXEcL6RWksz0vE8oHW5GBxPXsKavjeZzYOagk7HW6+9dQefvGVWwfmKq43plwA47VJ
      PVDcyI6TtWg09I9IaTQX/774r0aDUa/FqNdiMuhIiAxmw6JU4iMtQxp+XysfPKfLG2DH8aqB
      cxt02ou1ooaEKAuLsuMG3BWvJZ3LURTBtiOVRIYGMS89hqgw8xDXClVNXew8XUdLlxuBwKjX
      kpdsZUFGDJmJEVjMxmHTkRWF7/75MA9snMuizCuXYu85U8/5JjtfvGfxhFxPf36v7d4YDAYk
      SRr1ea6bFsDp8ePy+tFptei0GnRaLXrd3//W6abOVud6RAiBw+lDFgrhIUFj8vcqrGrjz+8W
      8t9fvm3gd4oi+N6f9/Pgxnnkj6K1mqlcN+8AFrNxUPOsMno0Gg3W0PHtKFucHUesNYS9Z2q5
      dUX/JFOTrRd7n4ecEd6nrgeunxkplWlDo9HwqdsW8fK+UlweP9C/M25ZbuKEzX1MF6oAVEZF
      SmwYS3IS2HakkoAkc7KimU1L06c7W9eMKgCVUaHRaPjYLQvYV1jHweJ69FotKbFh052ta0YV
      gMqoiQozs3V5Jk9uO81N+SlTbmk6GVzfHTiVKefO1TnUtfawflHadGdlQpjyYdCuri7Cwq7/
      plPlxmDK/QHcbvd1tRxa5cZG9QdQmVE4PX6CjPoxTdRdC2pVrDKj+NXLx9l2uGLK0lMFoDJj
      sPW4OFfbQVF1+5SlqQpAZcZwaRtoY4cD7zjDnIwVVQAqMwJJVjhS0sA9N80hMzGCiobOKUlX
      FYDKjKCwqhWrJYiEKAvz02More2YknRVAahMO0II9hfWsXVFFhqNhnnpsZwoa56SeKKqAFSm
      HVuPm6rmblbOTQQgM9GKX5LpdLgnPW1VACrTzsnyZpbnJg5sFTXqdRe3edonPe1psUgKBK49
      QKrKjYEkK+w8Vc0X71l2hXXWwsxYiqpaWJ47ubvNpsUiyWCYvM3pKtcX1S02LGYTuakxV8z+
      5mfFseN4NRqtblJnhdUukMq0svt0LWsXpAx6yKPDgxFAW5dzUtNXBaAybfQ4vZQ32LhpiBhM
      JoOerMQISusmdzh0kACEUPD7fUhDxVoXAkWZmVY3KtcfJ8ubSY+zEhlmHvL75XmJlNbZJjUP
      gwTg6e7kzNlizhSX0tXVRSAQwOVyowgFj7OLmoY2fF4PfklGCvjx+/24XC5kVRgqY0CWFQ6X
      NHDH6pxhj5mbFk1taw/+gDxp+RjyJTgQCBBiCcfW0U5bcwPC50JvTcHjtaMTRt49fRBLQi7h
      mj4S4mM5ea6WTVu2EhE8OzeYyYpCdVM3bp/E4uw4NT7RKDjf1I2910Nu8vDGK1ZLEEEGHQ0d
      jmGD3F4rg55YjVaLTqtFKDIGo5FgSxgJlhjqesDv8RMabiEhOZXI+FiCdDHERYUS19SK0+Ul
      InhiTSJmOv6ATEVDJ9uOVNLe7cTjk/j3T60nI2HmBIqdidS39fCb107wia0LMY0QVkWn1ZKX
      FkPJhfZJE8B1ExluJuELSBw628D7Jy9g0Ou4c3UOS3PjOVjcwMnyZv7tk+tuiA3jk0FDu4Of
      vHCIj2yYx9blVzcaP1XezPZjVXz/MxsmpWWdnX2Wa6C1q4//fvk4oWYjj9y6kHlp0QORlzcv
      TWdfYS0nyprHFF16ttDY4eDHzx/igY3z2DKKhx9gTmo0z71/Fpc3MCmRAdWZ4DEgBDy17TQ3
      5ydz+8rsfqM1oRAI/H3E7JEtC3hyWwELM2MGTNyuFX9A5u1jVWxZlkF4yPUZhbm5s4+fvHCE
      j27IY8OilFE/A2ajlrBgI/Vt9hHfF8aLOhM8BvaeqcUvKdy5Zs6ws5MLMuOYmxbDW0eq+PjW
      /GtOUwjBi7tL2VdYh93p44sfXn7N55xqGjt6+ckLR3hw83y2LBtdzX85i7LiKapuZ37GxC+L
      UDuqo6S718Pf9pby2N1LR5ya12g0PLI1n90FNXTYXdec7umKFk5XtvDzL26lrM42ZevkJ4om
      Wy8/fPYAD26azy1LR3ZtGY75GTGU1dmQlav7ADucXp7bWcyTb56iod1x1eNntelb3XEAABXl
      SURBVABkWWHfmVq+9N/v8PaRymELWFEEL+w6y6Yl6cOa5V1OZJiZ+9bP5am3Cq5pTXuH3cXv
      tp3mnx5YTWxECJ/Yms9f3ivGN4nj4tDf6hw918gnf/wGT755aiAg7lhp7HDww2cP8uCm+WxZ
      njnul9j0BCtt3S4cTt+Q5akogrq2Hp5++wz/78ld6HVa0uKt/MeLh/nhswc5V9sx7ATurBwF
      EkJQ3+7gj9vPAHD/+rn8364S8rNieWTrwkE1fGFVG8/vLOZHn988yN1lOPwBmW8+tZtP3rqQ
      pbkJg9L3S/KAx8Fwv//un/axYVHawGSRogh++uJhFmbGcvfa3EkZFQlIMq/sL+NUeTOfvWsJ
      x0ubKLrQzuMfWkZ+Zuyo0hRC0NjRy3++dISHb8nnpvxrHxD43zdOUVHfSURoEKHBJmIjgokI
      NaPXaTlS0kif28fGJelsXJw+MLMckGSOlDTy+sFywkJMfGTDPPIzY68o8xtSAEIIhGBI36o+
      t483DlVwuKSBj1+8OQa9DqfHzy9fPo7FbOTL968YcHNxevx8++m9fOaOxSzOiR9TPoqr2/jT
      jkJ+9sRWdFoNXb0eSmraKapqp66th9BgI/evn8uSnPgrPLyEEDzzTiF9Hj///MDqK87Z2tXH
      9/98gB8+tonYiKEd2YcrE4fLhz8gExlmHlJ4DpeX371xCklW+PJ9KwcepILzrTyz/Qwr5ybx
      8S35GEd4uRei3xLq16+e4KFbFgy5zmc8SJKCzeGix+mlu9dDd5+XTocbjy/A8jmJg8rwcvyS
      zNFzjWw7VElsRDCP37N84NpuOAH0uvof8JKadowGHWajgRCzAZNBj8Vs5HhZE4uy4nhw83wi
      Q69cg+ILSDz1VgHdvR6+9uAaQoONvLirhB6nly/du2LMRnCKEPzy5eP0unz0eXxIkkJ2ciRL
      cuLJSY6itbOP1w6WI8sKd63NZWVeEkaDjiMlDbyyv4wff27zIAdIgFf3l1HX1sPXHhzevfFy
      /AGZd09U8+6JKvQ6LcFBBualxbA8L5GsxAiCjHrq2hz85tXjLM6JH7IV7HX5eHr7GTrsLr7w
      oaVkJEYM8gwTQlDd3M1vXzvJI1vzWTVv5jjZQ3+L8OqBcg6fbeDxe5axMCvu+hFAn9uHVqsh
      JGjosWBFCIqr23n2vSLmpsVw28os/AEZjy+AyxvAF5BwegLMSYka0SVSVhSe23mW8job963P
      48VdJfzgMxtH9ModiR6nl9MVLcxJjSIu0jLIJ0xWFEprbbx2oBynx8/GJem8c+w8/+9ja0f0
      uP3203t5eMsCls9JHDZtRQgqGzr5044iosODeWRrPvGRFuraejhd0UJJTTsOl4/kmDBqW3t4
      ZGs+Ny9MHdEv7GBxA68fLCfIqCczwcrc9BiyEiOIDg+mtrWHX71ynMfuWjLjHv7LKa5u4/dv
      FbBpSfr1I4B3jlXx9tFKspMiWTM/mfysuAFnwj63j7/uOUdJTQeP3rGYJTnx19Q/VhTB20fP
      8/K+Uh67awmbxzl6MRZkWeFcnY3tRytZl5/K+kVpI15D8YV2/rj9DD9/YitBpsGj2V29bl7a
      fY6Khk4+ffsiluYkoPtArS6EwOZwc66mg4yEiFEv4XB7AzR39lHZ2ElNs53atv4Fa16/xBfu
      WcaquUlju/hpwN7n4bevn7x+BCCEoLvXQ2FVG0dLG2lo718gNTctmn2FdeSlRvPI1vxBxtfj
      RQiBvc+L1TLYyX0yuXQ7RuOm+JvXTmK1mLgpP5W2LiftdidNtl5au5x093pYvziN+9blDdmN
      mkgkWRloocNDpia+7EQQkOTrxyb1yuP6uxaldTYutDpYlBnDoqy4AbvUq/9+4m1SpyOdHqeX
      X7xyGqNeR3S4mahQE3ERZmIjQkiOCRvT0oHJti+dqnRuWJtUlaGRFQUNmuvSqX0mMOX+AE7n
      5O7xVFEZC1PuD6AoyrBdIBWVqUZdDKcyq5nVa4FUVFQBqMxqVAGozGpUAajMalQBqMxqVAGo
      zGpUAajMatSoECqzGnUiTGVWo3aBVGY1qgBUZjWqAFQmFV9AmpD4SJPFYH8AeydHTxyl4GwF
      H9wo4HR20t09+UumVW4c3jtRzdef3EVb98xcBj/oJVgoSv8mCw1UlhTQ0+slNCoSl6OP8OhQ
      ultrSctMpKmxmYT4aI4dPcLiVes4V1zGmtWLOLz/IKlzFtDVXM/itZtIjFKXPs9WPL4Aewpq
      WT4nkaffPsO3P3nzjNu4M2QXSKvVEfD5Lu6ZVPD5JTRakARYzEZcbg9otDh6HCRnpuDuDRBp
      0dFu6yQyLoXoyAiiI4Jp7+ia6utRmUEcKKonJTaMJz68DLcvwK7TNdOdpUEM2hIphEBRFDQa
      LRpNf4ApjUaDIsQVcWBE/xcgRP/3ioJWq0UIBTRaEJfOcaXi1S2RwyOE4LUD5aTEhrFybtJ1
      7TTj80t8/cldfOneFeSlRdPc2ct3/riP/3h8y5gCek02gx1iNBp0ukuxazRcuge6D9yMgZtz
      8d9Lv9FoLv5WM3SULnUibHgutNh5/1Q1oMFqMZF5HTvNHC5pJDIsiIyEMAKBALHhZu5Zm8P/
      vnGSb3/iphkj7lk9ERaQZMrqOjl4tp771+eRFB02bXmRZYW/7i3joc0LsJiN/Pb1U/zk87cQ
      Ng4/ACEEsiIm1WB6JPxSfyS6T9++CJPx75EpPrQuj4KqdnafqefOEczxRossK7TbXcRFhozb
      kWdWDoP6AzJHShr43p/289e95zDqtTyzvRB5KGvYKaLgfCtev8S6hamsmpfM6nnJ/Oa1E6MK
      CX45iiI4UFzPN3+/m8aO3knK7cgUnm8lyKhnfnrsFZ/rtFq+fN8K3jxUQXPnteXN5fXzu22n
      +dYf9vDUtgJ8fmlc55lVAvAHZA4W1/OtP+xh+7Eq7l8/lx8+tonP3rkEj1/icEnDtOTL65d4
      eV8pH9u8AJOhv1F+eMsCZFnhtf3loz6PLCu8fqicNw6Ws3peEr9+9Thu78R3NwPS8OHZJVnh
      7aPnuffmvCFHfOIjLdy/fi6/31Yw4nlGotnWy0+eP4QG+OVXbsPh8vE/b5walwhmhQDc3gB7
      Cmr41h/2sKeglk/cms+PHtvE8rxE9DotBr2OT922iFf2l+EcZyz8a2HfmVoiQs0szPq7A4pO
      q+UfH1jN/qI6TlW0XPUcAUnm6e1nOFvdznc+vYGPbJhHRkIEz7xzZsKCWgFUNXXx9Sd38cah
      8iHN1CvqO/EFZBZnDx9Je8vyTEwGHW8crBiz8XpRVRs/eeEwNy9M44kP90d5/ucHV2PQa/n1
      qyfG7GWg+/73v//9Mf3iGvF6vZjNQzuDTzQOp5d3j1fxx+1n8PgkHt6ygPvX55EYHTaodoqx
      BtPY0Ut5ve2aY4uOKY8uL7978zRfum85ER+IVh1k1JOXGs1vXjvB0tyEYd8HXF4/v3z5BJKi
      8A8fWUVEqBmNRsOirDjePFyJrAhyJsBfq7qpm//66zEe2DiPgspWDpc0MD8jdsAzQRGCp94u
      4NblmWSOYCSi1WqYnx7DS3vPYXO4mZ8ec9X5AUUI3jxUwSv7y/jyfStYuyBl4Dd6nZaluQmU
      1tk4XNLA2gUpo47cd0MKoNfl4/VDFfz+rdMEGQ08dtcSbluZTYw1ZFBI78uZkxLFMzuKWJgZ
      hzV0/DGSFKXfgOPw2QZe3F3CweJ60uOsg84phOCve0qJi7QMG4A3IjQIi9nIX94tJiAr9Dq9
      ePwSGk2/QLp7PfzX344RH2XhiXuWExz09wEGvU5LfmYc//P6SfIzYwcJbCxcaLHz0xcO8+gd
      i1i/KI3V85Ppcnh45p1CkqJDiY+0UNNsZ9fpGj53FRspgOAgA2vmp/DuiWrO1XSwKDt+2N80
      2Xr539dP0dzZxzc/vo70IUbHdFotS3LiKavrpLTONmILBP2Vxou7zt1YoRF7nF7eOXaevWfq
      WJabwIdumkNyTOiYavM9BTXsPVPHDx/bNKZZS8fFWKUFla2U1nVg0GlZmB3Pkpx4epxeXtlX
      xrr8FB7YNJ+gi+bQbV1OvvOnffzs8S0Dhg1DoSiC05UtlNXZ6LC76Or1YO/z4PFJ6HVabl+V
      xQOb5g8r7pPlzTz7XjH/8fgWQoPHHii3rq2HH/zlAJ+/e+kV9q9CCEpqOnjqrQKWzUmg2dbH
      qrlJ3Loya9Tn9gUkfv/maTp7PXzj4bVXBDfucrh583AFpytb+dDaXG5ZljHwjjQcbl+An714
      BI0GFmTGkpcSTWZixEDFoCiCXacv8PK+Mm5akHL9C0AIQWuXk7ePnudEWRMbF6dz99pcIkKD
      xtWNEULwnWf2sWlJOrcM42gohCAgK9S22CmqbqOgspVOh5s5qdEsyo5jSU48MeEhAwK65M7y
      3M5izjd28YWLdkO/+NsxcpIj+fC6vDHlT1z81+uX8Pnlq16rEILndp6lrauPrz20BuVipO0m
      Wx+2HhctnX2EW4JYOTeRlJjwK4IMN7Q7+P+ePcCjdyxmXX7qkOd3ewP87s1T1Lba+dVXbx/W
      qWU4ZEXhb3tLOVbaxPce3UBosJF3jlXxzrEq1i5I4aMb5hIWYhr1/VQUwYnyJi402znf1EV9
      m4OwYBNZSRE0d/YREmTgM3cuITU2bOoF0N3djdU6cRM82w5X8vbRSm5fmc1tK7MmJDx6Y0cv
      P3zuID9/Yivhlv7zKcrFWPq1NoqqWimtsxEVZmbFnETmZcSQlxo9qnH3M+dbefa9YmIjLDR1
      OPj1P9w+ouXQRCHLCj998TD17Q68fokISxAJ0aHEWkNIiLLQ1u2kpKYDlzfAkpwEFmfHExVu
      5r//doyHNs9n05L0q6YRkBQM+vGPq+w6XcPf9pZiMuqZlxbNA5vmEWu99lljIQQtXU6qGruw
      BBtZmpsw0FpOuQA6OjomNDZoZ68Ps1FLSNDETq69tLcch9PDyrwETle2UNPqwONXWJKTwILM
      GOYkWcfVnQAIyIJdBfXMTY0kI37qJt8UIXC4/ISHGIftLnX2+jjfbOd4aRMN7Q4evmUBq/Im
      3p93OGraejEa9CRHjc+RR6/XI0mjHw697rtAk4XT4+fHzx8iyKBj6ZxE8jNjSY4Jm7bZ1elA
      UcSMW7050agCGIHZ8ADMdlR/AJVZzZT7AwDXTQugcuMzqEMr5ABlJUXUNDXT2dlzxXdeVx/+
      8S3fUFGZkQyaVbB3thGZmEVshJ6jB05gTUwlOhjaHAGSo4JRXH202JwEa/1ogyPJThvep1ZF
      ZaYzSABGg55upxtrSBCJaTmAD5vNRnO9jeCgTAx6I0lpWThbyum021HSEse0ok7dEKMykxgk
      AEtkPMF9F+jq1RMXFwkoeMx6gq2JxMVa0Wq16E06FHMwcaFhjHWMZCZtiFFRGRgGnapRIEmS
      iImJGdYQ+tLe4g8yls9HOlaj0UxKmsNdz0jXOVl5Ge7zyTz3cJ+Pp1wmIk0hxKjyMuWjQHa7
      fdjMDPX/4/l8rOcYrnDHep6xMNl5UctldHmZ8j3Bl5iIGzrc52M9x9+DAExdmpOZl+E+ny3l
      MpZzzzgBTAdqXoZmNuTlhtwQczmBvi6Onq0iOcrEnsNnyUxPHvTi3tFcR1lZKZKipaK8DI+s
      p7utEq8cRmdTJdV1zYRHRmMcwzLfc6ePQHA0rc1NREaOYuJPctPY5iA8dPAiMFlyU1J4lja7
      E3trHTVNHYSYtJRV1RMZJDhdUo4nAFHW0FHnL+Cwcay0lqQIHbuPlpKVnjTomPamWspLy5DR
      UlZehk/R01ZfSW1LN5LTRtn5OiJi4zCOYQXo2VOH0VkiaWlpJTJiFKuCJSeN7U7Ch9jMI/ld
      lBSV0O5w0dVcS22zDZNWovBsJTrFTVl5FUHh0QSbhq/nb3gBKF43bXYHfm8AodPiaq9hz/Fy
      wk3g83vxKAairKH4/AF8kkTe3AU4utpIS0/A7dQiB3pxOnrRhlqxhow+306vH0dXB4qi0NJQ
      S31zOy63C7/bSW11GXv3H0Ov11FdW0F9bQseSaatsYG2TgdNVYUcLa5BLzmx9fqIiYrGqAed
      UYvQWIgK0xNiTUAJuAgLMdHe1Uuv00VqcsKo8yd7XLTaewl4/GgMOnqbq9h3+jyhRoHX58GP
      iahwCz6fhCcQYEH+AuydHSQmxCG0RiRZITshhl6hITRo9EvQXV4vPV2dKIpCc30NDS0dOF0u
      vK4+6qpL2XvwBHqdlqqaChrrW/DI0NrQQEd3Lw0VpzlaUo9B6sXWFyAmOgqDTqA3aRGaMKwW
      LcGh0SgIJFkwLzebTrudiPDhV9zOiqWN8dHhNHe7sRh1OD0Bwk1arHFRlJ9vJCI0iMpzhXQ7
      PViMOoqLC5G0QdScr6Smrp6Q8HAwGIkY4xJujUZHgtVEu8Pdv3lckQgPMdHQ2YdepyMjMw2t
      xsi8RXlkpGVh1IBWpwME6IykJSeiM1nIy04j4O6i8Ox5/JIGd08rjW12PH02Lly4gN0rCDZq
      sUZEjblcEmJCae7xEazX4PRKhBm0WGOsVF5oxRpiovxsIXaXhzCjnjNnCpHQUFBQhN8fQPhd
      lFxoIMQ4toETjdZAXJgBm8ODpAiEIhNmNtBid6PV6MjMTEOnNTE3fw6Z6VkYEP3lIgToTKQl
      J6ALCmNOVgo+p42i0gv4A1pc9iaaO3pwdtXi8/jR4aeo5BxBwSO3Mjf8atBLl3f5v0KA095G
      r2wmNT4SWZZQFIFOp0dRZHQ6HbIkIdCg02pQ6H8JG0sv9FJ6iiLQIPrPodUihEBDf/gQne6y
      0JFC9Acl1mr7j1f6h/EuhZuUJBmNRotWC0Jo0GgEsqyg1epQFBm9Xj+mfvLgclEQQkNfVysu
      TQjJsRHDl4tGg16rRVZEf7mMoWAGykUINEIg0KDVaj5QLped8/JyEQJFcLFcNFeWiwYEGjT0
      H6/X65FlGZ1OP2L+bngBqKiMxKzoAqmoDIcqAJVZjSoAlWlFkfx0dveAEqCj0z7IlegSbrdr
      cBQ5IejutOGXFPxeF80t7ciXHePzOAkMsXzfbmujpb0TwSwYBlWZ2TjbqnnyxR3kxAbx7PbD
      LMlNprWzFwMBWto68Dna2Hm0hPa6MnyKCWtEOBrZS21DC1rJyYuv7WB+fj57330LjdTHuTo3
      FrMOFB+H3nsDbWwevbZmjEYD3d09GM1mdm7fhvDYaHIFT99MsIrKJeIjLBTUdpMZF8beffux
      GhWO2hXiU6Pw9yn4AhrCdAo9DWcpMliR604QFGmlosKFNTqWIINCgBCWrljIT779ApLxdqTW
      Miw6HYX7d9DS3kpOZgouorn3tmhMIeEsW5XPmzvOqQJQmV50RjMLF+bS0ukjKS4aneymrdtD
      Znok8emJOLr8eGqqCY6MIzMujC6jjvCkOAqrmsnOyyeqz4lRH0RGQgjbdxzlplvXkz0/hwZ3
      PbbuAOkZ6ZhCQkhJjMIUnYVBp8UovOzcXczK5QvUYVCV2Y36Eqwyq/n/AXq520EbgR7pAAAA
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Monthly sales by gender motion  chart ( animated line chart)' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Monthly sales by region' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profit by markit donut Chart' width='192'>
      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
      YrT/ByO5VykQ7Y5PAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 11' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 13' width='109'>
      iVBORw0KGgoAAAANSUhEUgAAAG0AAADACAYAAAAOeu1mAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAB2UlEQVR4nO3RwQ2AMBDAMGD/efs9ZuCBqlT2BJFyz8xcpDy7A/jOtCDTgkwLMi3ItCDT
      go6cttbanfCrI6edzrQg04JMCzItyLQg04JMCzItyLQg04JMCzItyLQg04JMCzItyLQg04JM
      CzItyLQg04JMCzItyLQg04JMCzItyLQg04JMCzItyLQg04JMCzItyLQg04JMCzItyLQg04JM
      CzItyLQg04JMCzItyLQg04JMCzItyLQg04JMCzItyLQg04JMCzItyLQg04JMCzItyLQg04JM
      CzItyLQg04JMCzItyLQg04JMCzItyLQg04JMCzItyLQg04JMCzItyLQg04JMCzItyLQg04JM
      CzItyLQg04JMCzItyLQg04JMCzItyLQg04JMCzItyLQg04JMCzItyLQg04JMCzItyLQg04JM
      CzItyLQg04JMCzItyLQg04JMCzItyLQg04JMCzItyLQg04JMCzItyLQg04JMCzItyLQg04JM
      CzItyLQg04JMCzItyLQg04JMCzItyLQg04JMCzItyLQg04JMCzItyLQg04JMCzItyLQg04JM
      CzItyLQg04JMCzItyLQg04JMCzItyLQg04JMCzItyLQg04JMCzItyLQg04JejvYIXsP+0isA
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dd1wc553/31tZWGCXunREEwIJNSRULcm9x45rYjtOPSe5S3JOfsld7pJL
      nDiXfk6vzsWxHXfHTe6y1QsqqAOi97bsLrCwfWae3x9InGVAAgmB0M779dLrZTMzz/PM7POZ
      eernqxFCCFRUwhTtTBdARWUmmXYB+P3+6c5SRWVcpl0APp9vurNUURkXtQmkEtaoAlAJa1QB
      qIQ1qgBUwhpVACphjf7Uf/j9/mkZoQmFQhc8j8lwah5Qo9FcsDz6h/z88O87WFmcwW3risY9
      Z29VOy9vP8HX7l7F3MyEccv71t56dhxt5bufWo/JqB91TiAo8dc3D3Gs0c5Xbl9BYVbCBb0/
      IQRtdjev7DyBrAgiDDoijQaMBi0mowGjXsumA42UFqbyiWsWodWevSy7jrfx2BuHWJhnoyQv
      meLsJBItUWi1GjQaDYoQ/OGVA8REGbn/2kXnXHbNh2eCA4P9HDlRQ3JaDnPSk8e8qN/ZjdYU
      T6zZOOkM+/r6iIuLO7fSTjGyorDzaCs1bU7u3FBMXEzkhK4TQtBud2Mw6LDFmc9YuQa9AX70
      1E6W5Kdw5+Xzz5r2odoufvvyfv751mUsnZs6Ku36Dhc/fXoX3/vMBlITYs5YxkN13fzxtQN8
      dO08ri3Ln1DFOxeqW3r51Yt7uWFlAQmxkQRCMr6ARFCS8QdCBCWFouxEyorSJ5XuwJCffdUd
      HG20U9vmRK/TMi8rkQW5yWg08NK2an74wJVER06+Hp5ilAC8zl4qamvIzJpLf0cdIaMVW0IM
      Zr0Wt89LS7udjPRkjHoTdnsPCWnpOFtb0MXEEyUGsXt02GLBp7WwaF7uqAwvFgEM+YL87xuH
      6HS4KcpOYm9VO5+8fjFl89LPWFH6h/y8uLWKAzWdhCSFsqJ0bls3jySredS5bk+Anzy9k/k5
      yXz8ygUTfgs3dvbxs2d2c9v6Iq4szUF78jqvP8Q3//QeH79qAavmZ04orZ6+IX7+7B6ybRY+
      ff1izOdRWT6MEIIDNZ388dUKHrxzBSW5tilL+8MoiqDD4aamzcnhum5aewZ44OZSFuSO/ZKe
      KGMIwEGr201aUirO3m4QYNZJtHk06NydeIgkKSEaOaBgMMfg97tRAhoUjcxAbweRljSSEoy0
      dAyy9rIyPvyBnmkBCCE41mjnT69VsDg/hU9etwiDXktVcy+Pvn6QgowE7r92ITFREaddJysK
      u4+38Y9t1RTPSeKeq0oISTKv7apl57FWrlmex40rC4gyGYBhgf3smd2kJ8Xw2RuXoNNOrrvV
      0evmkef3sHJ+Jretm4dWo+HX/9hLVISBf7q5dFJpef0hnnjnCA0dLr58+wqybJZJXT8Wp5pi
      b5bX8Y2PrybbZj3vNGeCUQJQpCDd3T1ERFtHPi1GvYYhv4JJr2B3uomPt2LQ6XA6HFgTrdRV
      NZBdkI9O9uH2KUSbtPgkLYnxFj78znM6ncTGxk7X/Z1GICjz0o4TVNR2ce9VC1hSkHLacY8v
      xLObj1Pb0cfnblhMQUY8APZ+L3976whDviAfv3I+RdmJp13X2+/l+S1V1HX0cdPqAlYWpfHb
      lw9gjTbxTzctQXeOTQ/XoI9fvbif7BQLmUmxbDnUzHc+edmY7f6zIQRsOdTMSztquP+aEsqK
      0s6pTACyInh1Vy37qjv48keXk540flPsYmeUAC405/sFsPd5qGlzsqIoHaNBN+HrGjv7+PPG
      CpKsZj534xIs0aYxz1OEYM/xdv7+7hE2LJmDQafjnf0NXL8yn+tX5BNhGLvyCSGoaXXy4rYq
      Gjr7WF6YxuduXopRP/EyjoXHF+Q3L+2jps3J9z6zgazk83t7n2h18IdX9lNamMbVy3IJhmQ8
      /hC+gMSQL8CgN4g/KGEy6slLjyMuOpIkaxQ63fAXLBiSefLdozR29vH1j62acL/pYmXWCaB/
      0M9vXt6Ho9/L3VfMZ0Vx+hmbF32DPt7e18D2wy3cdUUxly3MRq87e3PEOeDlb28fAeC+a0qw
      xUVPqHyyrNDpHCQ1IWZC+UyEkDRcSS3miCkZzXF7Avzl9YO097rR67QYDTrMJiPRUUbMJgNR
      EQaGfEFaewboH/ITCMnEx0aSlxZHp2OQCKOeL99WNtLcm83MOgHAcHv8aH0PL2ytQqvV8Ilr
      FlKYdXqzxDHg5fXdtZRXtrOmJJNry/JJjhvdUT0TihBouLBDpDOFIgSyrKDVasZ9gQghCEoy
      Xn+IbtcQzd0D6HUa1pZkERkx+ys/zFIBnEKSFfZUtvPc5uOkJcZw79ULidDreHnnCQ7WdHFl
      aQ7XleVjiZ6aN6fKpcesFsApgiGZt/bWsXF3LZKscP2KAm5cVXBe48Mq4cElIYBTBCUZBJPq
      HKuEN5MfT7uIOd8RF5XwY9rXAg0NDV3wPFRUJsqIAEwmEybT2GPjU83FsBRCRQXU5dAqYc60
      9wEURbnolkSrhC/TLgCtVovBcGlMoqjMftQmkEpYowpAJaxRBaAS1qgCUAlrVAGohA3+oERD
      h4sPrv5RBaASFviDEr99aR//+ehmjjfZR/6uCkDlkicQlPjjqwdQhODLt5Xx6MaD+IMSoApA
      5RJHkhWefPcoHn+IL320jDUlmeSkxvHS9mpAnQm+aBBCcLTRztyMBCIjLqlFujOGIgRPv3ec
      Lucg/3p7GQYdSJLEfVcv4Ft/2cLKorRLaz/AbObAiU5++UI5qQnR/Md9lxEfO7s3m880ihA8
      vekYVS29fOu+y0b5Ib29t55dx9tGN4F8rl527NlFh70PRZERQqAoCooi0d1tH/n/kb8LgVAU
      FEV84FyZadbVrCYQknhq0zH+392rWLswi2//ZTMNHa6ZLtasRQjB81sqqajp5Jv3rB3TDOya
      5XkoijK6CTRcbwVagmx88TmsOSUMtRynYOkKmuubyMmIZ9feIyxaXMpgwEt0dCz22oMMGFMp
      So3EZEmi+sghlm24nvSEiTkphDtv720gNSGaxQUpLC5IISU+mh8/vYsHblrKsnlps3Y/s6II
      2nvdbDnUTGSEnptXz73gm+llReH13XWUV7bz3U+tJ9YcMeZ5Wq2GL9yyHN1DDz300AcPSIEg
      MbZUEg0KDr8Os0lHfLQJH5HE6GVMkWZMsXGkJcSRkJmDiSBC0ZCakYXVYiU7MxWPuw9JH01y
      /GjDJL/fT2Sk+nk/RW+/hz9vrOBfbivDYjah0WjISIqlKDuRP22sQFYEBRkX1tx2qvEHJfaf
      6OTxt4/w1t56CtLj6XIO8vKOGoqyE8f1ZDofThn0/uKFcux9Hv79njVn9SyKjTKqfYCZRAjB
      H1+rwGKOGNM71N7n4RcvlJOXFscnrl04rinXxYAQAseAj80HG9lT2U6sOYJrl+dRWpiGyahH
      CMGu4208/d4xri/L57oV+RimaAurNxDirfI63t3fyK1rC7l6WR56/cQGOFUBzCB1bU5+/dI+
      fvRPVxIdNbaDhccX5Lcv7cNg0PGlj5ZdlBv+hRBsP9LKc1uOUzo3latKc8lMtoxpMtzlHORP
      r1Wg0Wj451uXjWkqPJl8K5t6efydI9jizNx/7aJJez+pApghQpLMD57YzuVLctiwZM5Zz/3N
      P/ZhMur5wi3LLpjN+blSUdPJnzce5Jv3riEn9ey/bUiSeX1PHe/sq+eeq0pYW5I1qXsSQtA3
      6Oel7dUca7Rz9xXzWVmccU7PRRXADLHzWCtvltfxvU9vmFBTwOMP8sMnd7KkIIU7NhRPQwkn
      xtGGHn7/yn7+7eNryE2b+O8qhKCho48/vVaBTqchLy2OgswEctPiSPuQraQiBI5+Ly3d/Zxo
      c1LT6qC338vK4nQ+uq4I63n0KaZdAE6nE4vl/O25x0JWxDk7MY/FgCeAPyhji4uasjQBPP4Q
      3/7LFh64eekop+kz0Tfo56G/bePODcWsLZlYfIALyYlWJ798cS8P3lHGvKyJ38cH8QclWnoG
      ONHioLbdSY/Lw5A/RGayhZwUK85BH/XtLoRQSIk3U5iZyLysRLJTLJhNRs53bGDaBeByuab8
      C+DxB9l6qIW39tYRDMlctyKfa5bnnbMzXI9riNd21bK3uoOoCD3+kER+WjxFc5IozEwgJzUO
      wwQ7WR9GCMGzmyux93n4yu1lkx7d6XIO8e2/bOard61kQc7kgkOEJJkel4dO5yDdriEGvUEC
      QYmQLOMPygRDMkFpeA6nKDuJa5bnjoqTcIqGzj5+8tROPn/LMkrnpk6qHGdClhU8gRAt3QM0
      dvVhjTZRkJFAoiXygvg+zdomkBACp9vHaztrKK9qZ2GejevK8tHrtbyxp479JzpYOjeV68ry
      KciIP2tFE0LQ0+fhH9uqOVDTyRVLc7h59Vxiooz0DwWobLJT3+GiurmXbpeHzORY5qRaSU2I
      ITU+mrSkGBJjo9DrtWc01O10DPLQY1v573+64pw6gEIIqlsc/PzZ3Tz82ctJTxoda0EIgSQr
      lFd1UNvmoMMxSKdjkCFvkARLFMlxZtITY7BEmzAZdBj0OiKMOowGPUa9Dq0G9p/oZG91B6uK
      M7hxVQHJHwgF1WYf4Id/38lnb1hCaeHoME6ziVkngFMV4J199VS3OFi7MIsbVxWQEHt6M2XQ
      G2T38TZe311LdJSRNSWZxMdEEh05bAEea44gymRAr9XiGvTx0vYTVJys+DetnnvGdqU/KFHX
      7qS91023c4iePg8djkFcbh8WcwTxsZFERRgwnqxcBp2WCKMeg15LTauTZYWpfHScYHkTZefR
      Vp55/zgPf/bykWUTiiLoHfCwaX8j2w43k54Uy7LCNLJsFlLio0eCzE0UtyfA67tr2VTRyJKC
      lJEAfw8/vp37r13ImpKs87qHi4FZJ4CGDhe/fKGcm9cUctnCs9t0hySZ4029VNR04vYGGPIG
      8fhDI/9tNAy/8a5ense1ZXlYzOfeoZJlBYfbi3PARyAoEZBkQpIy0swISQomo551i7LPKcrL
      BxFC8OrJr9/XP7aapq5+3tlXT6t9gJXFGVxXlk9a4tREbnF7Ary5t47NB5uQZcFdlxdzbVn+
      lKQ908w6AUwlQggCIRmdVjNlkzLTiawo/O/rhyivaictMYarl+WyojjjvMU1HoPeIC63lyyb
      ZVY3ez5IWAvgUkBRBE63lwRL1Eg0SZWJc/HOratMCK1Wc16zqeGOuiNMJaxRBaAS1qjxAVTC
      GjU+gEpYozaBVMIaVQAqYY0qAJWwRhWASlijCkAlrJn2mWAhBLIsT3e2KipjMiNLIS6VhVQq
      s59pF4BGo0GrVVteKhcHak1UCWtUAaiENaoAVMIaVQAqYY0qAJUZRQgxo1b6o0aB/AMuDp2o
      ISuniPRk65gX9ff3Y7UOH+vo6CA9PZ2h/n4irFbOZn6tzgOMz1Qbe13sCODVnTWEJIU71hed
      t8nVuTBKAIokIykyOr+T+i4teOx4++2Yk5PpabITk5JGpC5EzZH9WLIXMNTVQGNbN9mJFhRX
      D92OAZJTUnB1d6MxRRNwtpGYt5i5WbaRPNR5gNE0dvbxyPN7uGZ5HjeuKkB3iQ8VCyF4Z18D
      5VUdCCGIitBz0+q501oGRRFjzQNoKSguIcUQZMexBnQIbIk2MmwWIvWJ+AMD+H1BLFYr9h47
      mSnDFn0hnw8iTSyYP5+u7ma0ehNSKIj15HmnBKDOA4zG7Qnwq3/s4+Y189h5tJWmrgG+eMsy
      TJdwrLCKmk7eLK/nm/euIcKg57uPbSU5LpqV8zOmrQx17Y7RrhBCURCAVqPB5/OhMxjRaTVo
      tRqE+L82myyFQGtArzv5NhcCTlbuUMDD4UOHsaTmMsdmRaM3Yjzpba+6QpxOSJL5ydO7yEuP
      52NXzCcoyTz25mHq2l187e6VpCeOdn6b7TR0uPjJM7v4+t2rmZuZAEB9u4sfPbWT/7hvLfnp
      8eec9rA5mBfbWWzShRD895M7VFuUmURRBE+/d4zWngH+7Z41I47IiiLYfLCJ5zZX8vlbSllW
      mDZuGgMeP+29g/gDIbwBiZAk4wuETnp9SmTZrCyfl3bRxBWw93n4zl+38JkblrD8Q+Gfyivb
      efLdo3z/MxtIsEzMkFgRAnufh8N13VQ293KssQetVsPCXBtfuq3sNJfpD1Lb5uSXL5SrApgp
      hBBsO9LCqztr+P5nNowyoRVCcKLVwW9e2seVS3O4Ze08ZEWhze6mrs1JTZuT2jYnvqBEemIM
      USYDZpMBg15HZIQBo15LZISB40122uxurivLY8OSOcTHRM5YH2zIF+S7f93KlaU5XL8if1Q5
      hBBs3F3LjqOtfPdT68c0Nz5lZnakvpuK2i4qm3oJhCRKcm2UFqYyf04SUSYDv3i+HJ1Wy1du
      LyPiQ0ZhQgh++PcdlM5Vw6TOGDVtDh55rvysQSVcgz4eeW4PHt+wpaM50kjxnCSKshLJsllI
      T4xBN85b7hTN3f1sOtDI7uNtrCzO4KZVBaQkRE9rR9sflPjZM7vITrFy/7WLxj1PUQSPvn6Q
      gSE/D961EqNehxACf1DieFMvu4+3UtXsIDvFwqK8FBbl20gd415Cksyjrx+k2zXE1+9efVqw
      vKauPn781C5+9+AN4S2AkKRwqK6LDoeb9YvmTFtsXseAl4ce28p9Vy+cUKcvKMm0293Y4sxj
      hvycKC63j13HWnl7XwOJliiuLM1hSUHKuBboU4EQgpCs8KfXKgiGJB68Y+VZBStJCj99Zhe2
      +GhK56ay42gLlc29JMRGsX5xNmVF6RMKiiHJCk++c4Tadhf/fs8arNEmhBD8z3N7KJ6TxA0r
      C8JTAJKscLi+mxe3ViHJCtk2C1XNDu68vJi1JVlnbS/LskJPn4cok2HS0Un8QYn/fnIHi/Nt
      3L5+ZiK9+IMS+6o72H6khZbuAXLSrKyan8nifBvWaNOEm0hCCEKSgscfpH/Ij9Ptw3Xy34DH
      z4AnQJ/bhy8oER8Tyb/ds2bCvqWD3iA/eXoniiJYtSCTZYWppMRHT7r5piiCl7ZXs6eynf93
      9yqCIZmfPLOLX37pWiKM+pmJEBMbO3MjG/XtLp7fWs2gL8gta+ZSWpiKQaelqaufp96vJBCQ
      +PhV8ynKTuTDj7p/yM++6k52Hm/D4wshK4KyeancsDL/rEIQAnr6hnhlZw2SLPjiLaUXxaRX
      36CfymYHFbVdNHf3k2yNYkVRGskn7RYDoeFJS1lRCMkKgaCMvW+I3gEf3S4PgZCErAgiDDqS
      rGas0SYSLVFERxqwREcQF20iKsJAoiVq0kFFFCGmxO9UCHhrbz3vVTQRF2Ni+bx0rivLBS4h
      c1whBJ2OQZxuH5ERegw6HUaD7qRHvxaXezioWkevm4+sLWT1/MxRb3pJVthX3cHT7x2jICOB
      e68uITrSSHVLL+/ub6Cpq5+i7ETWLZpDUXYivkCIN/bUsbuyjTULhuMUfFgIg94Ah+t72Hqo
      mS7XICuLM7hzQ/EFDxh9Lgz5gtS0Otl/ogN7nwcBRJx8RjqdFr1Oi8mgwxYXTVJcFLa4aOJi
      TJhNRqJMF9/9fBAhBDuPtrLpQCP/cd/akec/qwVwKkpMeVU7e463M+QLkmiJxOMPIcsKihBI
      skCWFbQ6DVeX5nJlae5ZfyyPP8jru+vYdKABvU5LakIMa0uyWFKQMmY/oX/Iz8bdtew53saa
      kiyuLcujxzXE5oPNHG3soSAjnvWLsinJtV30FeVSR1aU0zrMs1IAvkCIitoudh5tpaGzjwU5
      SWxYPId52YlEGIaDMitCoCgn/wmBVquZdKBpR78XSVFItprPGllFCMHAyYgq24+0kGQ1c9nC
      LJbNSyM+NlK1Lr9ImXUCaOrq43t/20ZRdhKXLRx+K5uM+otmfdGpjqFOp7nk1/NcCsw6Aciy
      QlCSL6pKrzJ7mXWrrXQ6LZFnGUdWUZkoak1SCWvU+AAqYY0aH0AlrJn2PoCiKIRCoenOVkVl
      TKZdAFqtFoNBnQxSuThQO8EqYY0qAJWwRhWASlijCkAlrFEFoBLWqAJQCWtUAaiENWqMMJWw
      QAg40tDDtiMtfP7mpSN7k6d9ObTL5Rox1lVRmQ6EELxZXs+7BxpJtkaRmRw7Ys2ixgi7SDhl
      4XH9ygJS4qNnujhTinPAi8cfIstmmfa8gyGZJ945Ql27k2/eu5aYSCPf+MMmVi/IYm5mgtoH
      uFjYeayV8qoOvvPXLXS7Lp0Vs4oi+Okzu/nxUzuRJGVa8x7wBPjZs7txun1851PrSU+MIdYc
      wWduWMwfXjlASJJHC8DnctE9MDDSVheij8ZGF4oQCEVBUQTV1dUIoaCcNNJVOT98gRAvbq3i
      6x9bxUfXzuO7f916yYjg7X31REboyUm18va++mnJUwhBe6+b7z22lWybha9/bBVm0/8ZipUV
      pWOLN/PS9urRTaBTXQJffzevvP4miy7bgKPRjnPAjLOlikF9MsW5KRzfvwOniGNd2cIZCWxw
      KfH+wSbmpFjJT48fcUb+3mNb+c6n1pOaEDPDpTt3HP1eXtlxgu9+ej0ADz22jQ1L5ozp+TmV
      HG3o4Q+vHuCuy+dzxdKcUcc1Gg0P3FzKN/6wafQXQKMVNFRX0tTRS0FxMcIfQqsBg8FAYkom
      xQVz0On1JNnSkLxuZPUTcF4MeYO8saeOOy8vRqPRoNFouG5FPjetLuSHf99Jt3N2fgkUIXji
      3SNcWZpDWkIMaQkxLMlP4dWdJy5ovofru/n9Kwf41ztWjFn5TxEfG8m9V5eAmGZcLtd0Z3lR
      8/yWSvGrF8uFoiin/V1WFPHStirxr79+S3Q5BmeodOfOvuoO8bXfviM8/uDI3+x9Q+KBn70m
      evs9FyTPg7Wd4vM/3yjq2p0TOl+SZaF2gmeQ/iE/71c0ctu6olEOF1qNhlvWzmP9omx+/PTs
      +hJ4fEGeee8Y912zkKgPOOAlWc2sXzyHl7ZXT3meB2u7ePT1g/y/u1dNOMCGTqtVR4Fmkjf3
      1LE4P4X0xLHb+VrtsAg2LJ7Ddx/bym9f2sfmg010u4ZQzjB9E5Jkevs9HG3owTHgvVDFHxMh
      BC/vOEF2ipVFebZRx29aNZfDdd00d/dPWZ4Ha7v43zcO8eAdKynISJjUtbPOF+hSweX28V//
      u4Vv33/ZWTu6QggcAz6ONfZwqK6Llu4BtFoNJbk2lhSkEBdjoss5RGNnH632AdrsbiIMOixm
      Ez19Q3zupqVnjDIzlTR39/PTp3fx8GcvHzfKy8ZdNdS0OfnaXavO6rh3Nk5V/n+9Y8VIuKXJ
      oO4JngIUIXB7AjgGvPT2exnw+Fk6N3XEYXksXt5eRWlhKomxpgk9D6vZwGUlGVxWkkEwJNPt
      8lDV6uTN8joGvUGSrFFkp1i5qjSHzKQYYqMiMBp01LS5+N0rB2jt7uOmVXMv6IidrAj++sZB
      blkzl9gow7j3tW5RFu/ub6C62c7czHOPB3a4vofH3jrCl29bTk5K7DnVK/ULcA70D/opr2rn
      WKOdnr4hHANejHod8TGRJFqjiI4ycrCmi6uW5XLz6rmjnKC7XUM8/Pg2fvC5K4mLOT8nDnHS
      B/VMNoy9/R5+/uweMpJieODm0lEhg6aKzQeb2Hywie9+aj0G/ZljLGw93MyOI6385yfWjlt2
      jy9Iv8dPMKQAw5aTihAgoNM5yAtbq/jaXZNv9nyQsBaAJCvsONrKiRYHJbnJLC5IwWwyjGm5
      qAhBfbuLTfsbqKjtYtm8NJYUpJCaEEOy1YzRoEOr1aDVaBBC0O0a4un3jtPS3c89V5Wwojgd
      zcljv3/lAImWSO6+YsG03as/KPHnjRV0Ogb5xsdWj2qenKoGrkEfNa1OTEY9i/JtaE8OzY6H
      EIIhX4i9Ve28uLWKb3x8NXkT6ISGJJn//PP73H3lgpHmmRACSVY41mjnzfI66ttdWKJNGA06
      NIBep0Wr1aABYs0m7thQdMbwUhNh1gmg2zXE1kPNLC9KI9tmHTcK4JkISjLlle08v6USi9nE
      yvkZVDbZqW1zkpoQQ2lhKiuKM7DFmQlJMruOtfH+wSYGvQGuX1HAZQuzTos5dSaqmnt57M1D
      RJmMfOr6xei0Gh5+YjuP/Ms1FzQ00VgoiuCNPbW8tbeeB+9cSW5aHP1Dfk60ODjeZKe6pRdv
      QKIoK5HeAS+djkGWFKSwcn4G8+ckER1pRKPRICsKvf1eDtd3s6+qg+bufubnJHPF0uGQSxPl
      YG0Xz75/nIc/d/nJ37WFncdaSY2P5qpluZQVpU84osy5MusEMOQL8sqOE1TUdCKAxfkprF6Q
      yZwU61lDG50KgPHS9moijHruWF982g8WDMlUNtk5VN/N4bpuFGU4vlVeWhzXrchn/pyks8a3
      GouRsKdbKtHrtFy7PI9bL5s36XSmikN13fzhlf2YTUZ8wRBzMxIozkmiODuJjKTYkY5p/5Cf
      I/U97D7eRm2bkzmpVnJSrBxvtuNy+yidO/yimJ+TNGnreRj26n/osW14/SGGfEGuWJrD2pJM
      0pOmL4LQrBPAKYQQtPcOcqCmkz3H2whJMiV5NnJT44bDhBqGw4SaDHoiTQa6nYO8uK0aIQS3
      ry9iUX7KGT37FUXQ1juAOcJIonViMWvPxqA3wIGaTlbNz7zgb7az4XL7GPIFSUuMmdBXdMgb
      5FhjDx2OQeZmJjAvK3FKYg/39nuw93mYm5lw1n7DhWDWCuCDCCHocAxysLaLtp4BvAGJ4EjA
      aAlfQMIaY+LWtfNYUpByTs0mlUuTS0IAKirnivoqVAlrVAGohDVqfACVsEaND6AS1qhNIJWw
      Rl0MpxLWqAEyVMIatQmkEtaoAlAJa1QBqIQ1qgBUwpqwEEBzdz+/fWkfsjK91nyTwR+U+Naj
      m3FO8yb2cCcshkE37W9gy6FmblqVP64Dw0yzt6qdquZe3t3fwB3rZ26vQLhxyQ+D+oMSh+t7
      WJCTzN7qLu6+4tw3YV8ohBC8s6+Rz920hFd31XDn5fPVJdvTxCX/lOs7XMREGV4GxJwAABbU
      SURBVLlzQzH7T3QgyRdfM6ixq58BT4Bry/JJspg5WNs100UKGy5pAQgh2HG0lQ1L5lCUnQhA
      m31ghks1mm2Hm7li6Rz0Oi03rMznnX0NM12ksOGSFkAwJFPZaKd0bio6nZbl89Ior+qY6WKd
      hscfpLyynbULswEoLUyjw+G+ZOzRL3ZGCcA/4GLfkeNIHidbdh8adUFHx3AF8g258Ycu7lhf
      J1odJFqjSDppUFVWlEFFTSch6eIp976qDvIz4kk+ue/YZNSzan4Gmw82zXDJwoNRnWBFEqD4
      ael0ER2lp7HyAIeb3ZQWptLn00BogLa2NpJsNow46HL0Yk2w0VJ5GFNKDtqhHmz5i8nPTJ6J
      +xlBCMGmA42sXpA58rdsmwUhoLGzj8KsxBks3TCKIth8qJlb1xae5r1z9bI8/vvJHdy2ruic
      Ns8P+xJ52FvdTmZSLKXTZIs42xBCjN0ESoqLoavfh9moY2DIh0lIDIYkzFGRRMclMzc3jYAv
      QEjSUFiyBIPiRujNxMfGYLXEYrf3Tve9jMIflDjWaD/NE1Or1bCyOJ3tR1pnsGT/R3N3PwND
      fhbknP6ysMWbSY4zc6S+e1Lp+YMSB2o6+eGTO3j4iW10OgZ59PWD7Ku+uJp9FwsnWp2jvwCR
      cXFkx1nJSBdoNCBkiXmKhgijDn8gRESEEY0GYuNBowGNVkt0znzSMvIRGgMoKWj140cAma55
      gPLKNnJTrcRE6k/Lb1lhKj95ejf3XjUfg35mu0DvHWjgsoWZaDVi1DPZsDiLt8rrWJJvO6Of
      pwDa7W42H2pmb1UHGckWLluYRdm8VCIMOpq7B3jkhb0glEmZVl3q2Ps8/M9zu0cLQKPVogFG
      7Br1ek6N2kdF/d/pp9k56nTodKe8c848xj9d8wDlVZ2sW5Q9Kq85qXFERRpo7B4Y9eadTjy+
      IIfqe/jOJ9eP+TzKijJ4YWs1vQO+cY2ihBBs3F3LO/saWFuSyfc+czkpCdGn+R0VZCby9Y+t
      5ufP7MYUYWThGJbl4YbHF+Snz5Zz9xULpn8ibDrw+kPUtjn52t0rRx3TaDSsW5jN9iMtzJ+T
      dEbfywvJ7sp2sm0WUuLHdpCOjDBQNi+dLYeaue+ahaOOK0Lw4tYqKmq6+MHnLscabRr3XnJT
      rTx450p+8cIe/vnW5ZTkJs/YfZ8vQghOtDr421uHEQKybBYyky3MSbGQmzZsiqbTju9nGgzJ
      /PSZXawsTueq0pxLUwB7q9tZXGAb165v3aJs/v1P7yErAr1u+iuCLCvsPNrKLR/q/H6YK5bm
      8N9/38Ht64tOc5iWZYWnNh2jqqWXb91/GbFn8RjVaDQUZiXwz7cu55cvlPPgnStnpQgCQYkX
      t1Wz81grn7puMUnWKJq7+2nocFFR00m7w43JoMcWZybGHIHFHIHJqCc6MgJzpIGoCAN7KtuJ
      NZv42JUL0Gg0l6YAdh1r49qy/HGPx8dGkpYQzbHGHpYUpE5jyYZptQ/gGvRRPCfpjOelJ8WQ
      mhDNwdou1pRkAcP+pv/7xkGauvr5z/vOXvk/yMI8G1+5fQW/+cc+vnrXSoqyEy+4CIQQ7Kvu
      YPfxdqKjjFjMEcTFRBITaST2ZCW1xpiIihjblftUGk1d/Tz6+kGSrFH86IErsUYPGzjkpsWN
      BMNTFIHL7aPTOciQL8iAJ4A/KOH2+OlyDuINhLBER3Df1QtH8rrkBNDb76GlZ4BF+Wdu665d
      mM2uY23TLoBTw7PrF2efdYhTo9Fw9bI8Nh1oYNX8TBQhePT1g7T3uvn2/evOKdzo4oIUPv+R
      Un75Qjlf/9jqc4qqMlFkWeHVXTW8X9HE7euLCEkyA54AjZ19DHkDDHiG/ymKIMESSVlROvPn
      JJGaGIPxpE9oICixcU8tWw42c9flxaxblD2uULRaDYnWqEl5uV5yAiiv6mBhbjKGsywmW1GU
      zjPvHyMYkqfE5HWieAMhjjb08F/3r5vQ+YvzbTz5zhFaegZ4Z189/YN+vvWJy04LPjdZls1L
      w6DX8osXyvnImkKuXZ533qGKPowvEOLJd4/S0j3Aw5+9nPjYyHHPdXsC1LQ6OFjXzVt769Hr
      tBRlJVKYlcCmA42YI41855PrsMVHT2kZ4RJbDi0E7DjSzN2Xz0eSpDOeG2nUMifFyoET7Syf
      N7mJIsGwW7JWq8FsmlxF3HW0hbSEGOJjIib0HPRaWL0ggx88sY15WYl8+bZlGLSc9zMszk7g
      P+9dw+9fraCuzcGnrls4KpLNueL2BPj9qxWYjHq+ec8qTEb9GcsbadSyOD+ZxfnJhCSFnj4P
      RxvtlFe1s35RFpctzEKn1VyQejMrl0MHJXnkE/lBOh2DDHiCzM+1YZiAX/3akiy2HmlldUn2
      uOcIIfAFJNrsA7T0DFDX5qS5e4BBXwAhINESxYLcZAozE8iyWUj8UOQVrz9Eb7+HbtcQHb2D
      bDvSzKdvWDKpZ3DjqrlEGPR8ZG3hOfnwj0emzcp/fXIdj799hO89vpOv3F5Gdop11HlCCDod
      g2w51MzxJjvzshJZnJ9Cfkb8qGZYR6+bX/1jL8VzkrjnypJJf10NBsiJjCAnLZ5bzuvuJsas
      c4du6urj4ce3E5KGlzXrdJqRtfNCDAdgu//aRRPq3A16A3zpl2/x2wdvICbq/37IIV+QmlYH
      h+q6qWl14Br0Y4szk51iIT89gbz0OJKsUcMxBOxuqlt6Od7US7vdjSlCT2FmAoPeIJ2OQXzB
      EPExkSRZzdjizRRmJbK8MG3Kmxzng6IIdhxt4alNx/jYlQvYsHgOWq0GRREcrOvivQONNHb2
      sW5RNgvzbDR393PgRCdtdjcFGfEsyk9h6dwUBr1BfvlCOTeumsv1K/Ivqnscj1knACEEwZCM
      crLUsqKMrPEPhmTiYyMnvJlECMEP/76TVfMzyE2L42BtF0cbemjo7GNuRgIL85JZlJdCamI0
      Bp3ujD+oEIKgJNPtHKK+w0V0VARZybEj5TlbrK2ZRghBR+8gjzy/h/yMeGxx0Ww+2Igl2sR1
      Zfksn5d2WhNJEQJ/UOJ4o5291R3UtDoY9Ab58u1llM5Nvajv9YPMOgFMNfuqO/jJ07vISIpl
      Ub6N5YVp5GfEYzLqZ82POJX4AiH+/u5RJFnhuhUFzEmxnPU5CCEQYniIdjoHFKaCsBfAcJTD
      4LQHrFO5OLikN8RMBI1Go1b+MEaND6AS1qjxAVTCmrBvAqmEN6oAVMIaVQAqYc0ltRZIRWWy
      zMq1QCoqU4XaBFIJa1QBqIQ1qgBUwhpVACphjSoAlbBGFcAsp6mrn6c2HWPQG5jposxKVAHM
      YgJBib+8fpDaNgfffWwrHb3umS7SrEMVwCxFCMEb5XWYTQb+65PruWFFAd/72zYO103OUDfc
      GSWA4NAA+w/spaq+hWndKRMGePxBvvH7Tew40sL57kPq6B3k7b31fPbGJeh1Wq4szeGrd63k
      dy/vZ+OumvNOPxwY9AZG7wjzOp04ZAm33YFRE8SriSFW58fp9pGdlUFDUyvpmRk4enopKikh
      cpJb4C62HWHThRCCv711GHu/l7p2J/dfu4jLFmad07ZLWVZ4+IntrJyfwXUfcsDr6fPwi+f3
      kG2z8OkblpxTfIHZjhDirM81EJL48VM7x1oKodDV3kZBfiG1hyvo9fUzb04qqXEm6uubCCgC
      r8dH+py8SVf+cKbbNcSOo6088qVrcbl9/PjpnRh0WlZ9IIDHRBBCsOVwM5KscHVp7qjjtjgz
      3//M5fzx1QP84IntfPWuVSScwZRqOnAMeOkb9JGfHj9l+6wVRRAISXj9Iez9Hjodg/T2e+l0
      DOIa9FGQEc/Vy/JIiY8eZWYQCEn84vlybHHRo78AciiErNFg1Ouxd7YhImJw29swWVNIS4ql
      rbWTBJsNU0QEhjG8ec6Gy+XCah3tPXMpIwT86KmdLMqzceOqAgBq2pz8+sW9fOGWZZTkTtym
      3en28e2/bOGb964h22Y5Q56Cl3ecYE9lO/9x79ozOrNdSCRZ4eEndtBuH+C6FQXcurbwvOMy
      dLuGePztI7T3upFkhbgYE+mJsaTER5OWGI012kRFTRd7KtuJt0RxzbJcFuenEBNlRFaG7SUH
      hvx89c6V078p3uVyYbGM/8Ndihyq6+aJd47ysy9edZplS127i1//Yx9fvKX0rEa5MFypH3m+
      nCyblTs3FE3o/Be3naCippNvfWLtjOx9fmdfA+XVHXzltjL+8sYhhrwBvnjrMlLOweZQCMH2
      I638Y3s1N6ycy6r56cREGU+Lh/BB/EGJqhYHWw+3UNfmZOncFEKSjNPt598+vpoIgw7ENONy
      uaY7yylHURRR2WQXbfaBs57rD4bEg795W1TUdI55/Hhjj/ji/7wuKpvsZ01r17FW8dXfvC2C
      IWnCZZVkWTz+1mHxvce2Co8vOOHrxqK6pVf86O87RG+/Z0LnOwY84oGfbRStPf0jZXlrb534
      /M83il3HWoWsKBPOe9AbEL99aa/42u/eEXVtzkmVW1EUYe8bEi9vrxa/erFcuD3+kWO6hx56
      6KHzFPmk8Pv9REbObJv0fAhJMi9sreK5LZVsOdRMQUYCSWdwI357bz1D3iB3XF48Zvs3Oc5M
      akIMv/7HXgozE0ZZK55iwOPnF8+X86XbykiOGzuoxlhoNRrm5yRT3+Hi/YpGls9LO6ema7dr
      iJ8/u5voKCM7jraysjjjjOkoQvDoxoMUz0liTUkmGo0GrUZDXlocRdlJPPbWYTodQxTPSTqr
      kVlzdz8/emonyXHRfPXOlZM2ydVoNJhNRuZlJ7KiOOM0e0lVAJPA6fbyyHPl9HsC/Ps9a8hJ
      jeN3L+8nLy1uzErpcvv442sV/MtHl4/42Y9FakIMtjgzv3pxL4fre6htddLpGMTtCRCSFLRa
      Dc+9X0l6UixXleZMuiOp1WpYmGfjQE0XB2o6WVGUPinbQo8vyM+e3c0VS3P41PWLqWl1cqiu
      i9K5qeOmc7i+m62HWvjS7WWn+bhqNBriYyNZU5LJnsp2Nu6uITYqAo8vSDAkI8kKEYZhUzJJ
      Vnh11wkef/sId1+xgFvXzpty462wN8aaCEIIqlsc/O7l/Vy+dA63rCkcefsdruvmly+W842P
      r2H+h9rxf95YgVGv45PXTcyr1On20mZ30+MaotvlodM5SJ/bh2vQhyXaxPc/vQHzOcQEOMWp
      0Q9rtIkHbi6dkAgkWeFXL5QTaTLwhY8sQ6vV4A2E+P7ftrF8Xhq3rSsadW/+gMR/PPo+n7hm
      IUvnjh9/QVYUdh9vY9exNoZ8wZF/voBEZIQek1FPktXM5z9Sii3OfGGc+ibVmJoCLrY+gKIo
      QjlDW1RRFLFxV434ws9fFwdru8Y8t7q5V3z2J6+K4409I39r6uwT//zIG6J/0HdeZZNlRYQk
      WUiyfM7pfBB/ICS+/ZfN4tGNFWe871P5P/PeMfGdv24Z1e/oH/KJL/zP66K8qv20dBRFEc++
      f1z8z3O7hSxPvI2vKIqQZFmEJFkEQ5LoG/SJ1p6BKbvv8Qi7L4CsKARDMi3dA9S0OWjo7MM5
      4CXWHIE1OpKE2EjiYyOJjYogNjqC13fX0tvv5V9vX0FKwvhtz9o2Jz9/djdfvHU5C/OS+cHj
      21k5P5Nry/Km8e4mxpAvyA+e2E58bCRXLM1hcX7KmO3wHUdaeG5LJT9+4Cqio0Z/eZq6+nn4
      iW18+xPryE0b/k3b7AP86O87+f5nLx+3P3MxMSKA6XKGC4VCJCcPj3srioJWO/rBCyGGo3iP
      cUySZWRZEDHGDOcpLX/4UymEICTJdDqGONHqoK3XTSgkE2kyUJiZQFyMiSFvEIfbx4DHT9+g
      H6EIFCGwxZu5eXXhqBnVscre2NnH1sPNrF+UxZ7KDu7cUDyqnOPd87keG++ez5aePxhi/4lO
      jjXayUyKZdX8zJHQQoqiEAjJPLelkqtKc8n4QJjWD6d5uK6bpu5+bl1biBCCbUdaMei1rD0Z
      0+zUNZpx3LHPtfxTdWxGvwCSJKHXT7win+uxc01PkiR0Ot24150pqNt0HVOUYWv48cRxpvRg
      /Gcy2XKcz3OcynJM9tiMLhTR6cbu0Z+ps3Mux841vfHKdz5pXiz3Np3luJif44wK4GL337/Y
      ywdqGc+XGZkHOHH0AKbYODo6HcTHxZ79opCbNrsPS8zosfRQYIhjR45hd3vpbWugqcuJ2SCo
      bmgnIVJm76FqBv0ySfGjl19s3bKFrOxMtmzaTHpeLh9+T3n6ezlWWcWQX6a5phK724/wO+lw
      BBBeB1W19WCMnVSs3vEY7GzhaIcTX7+L+Pj4CV3T1tY2zrISQWtDDTW1dUiyQlVVNbqIKBpO
      VBNhiaep+jCN7b2kptrGXUYwGYafYwZbNm0h4yzPsammkl53gOBAD5V1zehEiMqqKoTJisU8
      NUs1tm3ZjC0xkq4+sESfedh4Rr4AsfGJdLU1g9ZExb69yDoT1lgzJr2Ofmc71Y0OFi6Yi2vA
      hVbRkZRmo6u9F7vdgt9RT5c/mpJsK5iTmDsnnYx0G36h4NOnE631YrYkYx30glaLIkkoytjd
      nESzhqbWdoQ+mt62WrbvOcbKZUuIio7GL+nISk0kJdGNxiQTkVZEwN9LamYW/qY+0IBWp6On
      s5P0xMLzfiaKpEEvvLg8Wjoaa+hw9BMTa8FqteLuc1J5/DjZ8xfjt3cjacAQZSHepLCvsxNL
      bCSHD1dSsnAJziEPpUuXkJaegV/W4fUHWbG8hIZ2N9mZaYBAo4Ggo4c+GRKnoAYkRGloau0A
      Qww9rSfYUV7FymWLMcdE45P0ZKUkYksYfo6m9GL8Pjsp6Zn4RQ8+f4jFZStpbWiEpJjzLwyQ
      HBdJY2s3Wn0se5oqMcfGYI6KRYefphPHGdInkpNopHfAOzM7wrR6E3Em6PP4kQUoikyMUUuv
      N4QQWnJystDpIymcX0BBXh46RQy3I4WCRm8iK92GIcrC3JwMfAPdHK1uIijpGHK10uVw43Z1
      09DQSEdnL7oIE36/d8xyRCVk0NbQSHpKLP0DQ6QkWTGYrdRVnyAxwUpvczWN3f0oionu9mrc
      PomOlkYaGhrQREShlYPEJ6dM2XPJysulvbGZkBRCr9ViirHSVFdLTIyZuOQ04i1RpGYXkJWV
      RWpCLBqNFp1WSzAQJCVrDtEGLTnz5hOl13Co4gC+QJAoncKBg8cxGHU0NNTR2NROjMWKJtaK
      dYomVc2J6bQ1NpFmi6F/wIMt0YIxxkpN5QmSEizYGytpsg8gRARdbVUM+iUOV+zH6w9iNAiO
      VexDHzWxr95EMFlsSIO9yLKE0OiQhR4x2IUUEY0hIoaM1GSiLInMyc6emVGgU8uhh4c7FUCL
      VqsZ7qEDkqKg0+oY+ToLgazIaLU6EAJFgE6nRaPRIISCJMlotFq0gECDBoGsKGh1OoQio9Xq
      x5z1FIpy2q43RVGQAkO0drspyM1CCBlZVobzRUGjGU5PEcOClBUF/TijG5Pl1M8wPEynQZYV
      dDodQlHQaLXIsoRGqzutySKEgnLy5SBLEtqTZdEAsnyynHo9iiyj0+mGYydrNAw/Ci1anZap
      aJ2f/hwFiiJOPsdBCnIzx3iOWoSioAiBXq9HPlm+qeornBpGR6NBkU/WG4ZHfxRFRgjNyL2H
      3USYisoHUTfFq4Q1qgBUwhpVACphgSIFcbj6QQlhd/SN9FlUAaiEBUM9Dfz58Rfobqzmby++
      gdftoqWjZ2ZnglVUphNbnJmKJhe5thg2b9mK1aioXwCV8EBnjGLxwkJkYSDdloQtPpa+YIQ6
      DKoS3qhfAJWw5v8D1XI/3k+Fbi0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Shipping cost by category by donut chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sub Category and sales word cloud ' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
